<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright 2008 Siemens Product Lifecycle Management Software Inc. All Rights Reserved.
This software and related documentation are proprietary to 
Siemens Product Lifecycle Management Software Inc.
-->
<xsd:schema targetNamespace="http://www.plmxml.org/Schemas/PLMXMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plmxml.org/Schemas/PLMXMLMPMSchema" xmlns:plm="http://www.plmxml.org/Schemas/PLMXMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" xml:lang="en">
  <xsd:include schemaLocation="PLMXMLSchema.xsd"/>
  <!-- -->
  <xsd:annotation>
    <xsd:documentation source="http://www.plmxml.org/Schemas/PLMXMLSchema/History">
      <plm:SchemaChange author="davidj" date="2005-10-24" version="6.0.1.26">
        <plm:Description>
        Add plm:refType attribute to various attributes
        </plm:Description>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2012-03-26" version="7.0.3.263">
        <plm:Description>
        Add support for Origin Relations, Logical Assignments, and Manufacturing
        Constraints.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ProcessViewType']/element[@name='LogicalAssignment']" />
        <plm:Reference locationRef="..//schema/complexType[@name='ProcessViewType']/element[@name='ManufacturingConstraint']" />
        <plm:Reference locationRef="..//schema/complexType[@name='ProcessOccurrenceType']/attribute[@name='originRef']" />
        <plm:Reference locationRef="..//schema/complexType[@name='ProcessOccurrenceType']/attribute[@name='logicalAssignmentRefs']" />
        <plm:Reference locationRef="..//schema/complexType[@name='ProcessOccurrenceType']/attribute[@name='constraintRefs']" />
        <plm:Reference locationRef="..//schema/complexType[@name='LogicalAssignmentBase']" />
        <plm:Reference locationRef="..//schema/element[@name='LogicalAssignment']" />
        <plm:Reference locationRef="..//schema/complexType[@name='ProductLogicalAssignmentType']" />
        <plm:Reference locationRef="..//schema/element[@name='ProductLogicalAssignment']" />
        <plm:Reference locationRef="..//schema/complexType[@name='ToolRequirementType']" />
        <plm:Reference locationRef="..//schema/element[@name='ToolRequirement']" />
        <plm:Reference locationRef="..//schema/complexType[@name='ManufacturingConstraintBase']" />
        <plm:Reference locationRef="..//schema/element[@name='ManufacturingConstraint']" />
        <plm:Reference locationRef="..//schema/complexType[@name='PrecedenceConstraintType']" />
        <plm:Reference locationRef="..//schema/element[@name='PrecedenceConstraint']" />
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2012-09-11" version="7.0.3.276">
        <plm:Description>
        Add a reference to search criteria from logical assignment.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='LogicalAssignmentBase']/attribute[@name='criteriaRef']" />
      </plm:SchemaChange>
    </xsd:documentation>
    <xsd:documentation>    	 
    
    PLM XML Schema for Manufacturing Process Management
	 	  
    </xsd:documentation>
    <xsd:appinfo source="http://www.plmxml.org/Schemas/PLMXMLMPMSchema">
      <plm:SchemaInfo name="PLMXMLMPMSchema.xsd" date="2008-05-02" version="6.0" status="release"/>
    </xsd:appinfo>
  </xsd:annotation>
  <!-- -->
  <!-- ************************* SetupInstance ************************************* -->
  <!-- -->
  <xsd:complexType name="SetupInstanceType">
    <xsd:annotation>
      <xsd:documentation>
      This element is used to allow ProcessRevisionView elements to Instance elements
      in the Plant and Product Structures, or to reference Occurrences in those
      structures.
      
      Attributes:      
   
      predecessorRefs:     Used to indicate the process flow.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CompositionInstanceType">
        <xsd:attribute name="predecessorRefs" type="plm:uriReferenceListType" plm:refType="plm:Instance"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SetupInstance" type="plm:SetupInstanceType" substitutionGroup="plm:CompositionInstance"/>
  <!-- -->
  <!-- ************************* ProcessInstance ********************************* -->
  <!-- -->
  <xsd:complexType name="ProcessInstanceType">
    <xsd:annotation>
      <xsd:documentation>
      An Instance of a Process, ProcessRevision, ProcessRevisionView, or ProcessStructureView.
    
      Attributes:
    
      predecessorRefs:      Used to indicate the process flow.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:InstanceBase">
        <xsd:attribute name="predecessorRefs" type="plm:uriReferenceListType" plm:refType="plm:ProcessInstance"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcessInstance" type="plm:ProcessInstanceType" substitutionGroup="plm:Instance"/>
  <!-- -->
  <!-- ************************* WorkAreaInstance *************************** -->
  <!-- -->
  <xsd:complexType name="WorkAreaInstanceType">
    <xsd:annotation>
      <xsd:documentation>
      An Instance of a WorkArea, WorkAreaRevision, WorkAreaStructureView, or
      PlantRevisionView.
    
      Attributes:
    
      predecessorRefs:    Used to indicate the process flow.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:InstanceBase">
        <xsd:attribute name="predecessorRefs" type="plm:uriReferenceListType" plm:refType="plm:WorkAreaInstance"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkAreaInstance" type="plm:WorkAreaInstanceType" substitutionGroup="plm:Instance"/>
  <!-- -->
  <!-- ******************************* Activity ***************************** -->
  <!-- -->
  <xsd:complexType name="ActivityType">
    <xsd:annotation>
      <xsd:documentation>
      An Activity is a component of an OperationRevision. An OperationRevision
      contains a tree of Activities.
    
      Attributes:
    
      type:              
      activityRefs       child activities
      predecessorRefs    prior activities in the flow
    
      Note that the values of the following attributes are in unspecified time units. They
      can be used for comparison, but do not indicate absolute time intervals.
    
      startTime          The start time of an activity 
      duration           The duration of the activity
      calcStartTime      Calculated time before starting current process/operation/activity 
                         due to existence of predecessors
      calcDuration       calculated total duration of all the activities under an operation
      calcMinStartTime   calculated minimum time required before starting current
                         process/operation/activity due to existence of predecessor(s)
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="type" type="xsd:string" plm:deprecated="true"/>
        <xsd:attribute name="activityRefs" type="plm:uriReferenceListType" plm:refType="plm:Activity"/>
        <xsd:attribute name="predecessorRefs" type="plm:uriReferenceListType" plm:refType="plm:Activity"/>
        <xsd:attribute name="startTime" type="xsd:double" use="optional"/>
        <xsd:attribute name="calcStartTime" type="xsd:double" use="optional"/>
        <xsd:attribute name="duration" type="xsd:double" use="optional"/>
        <xsd:attribute name="calcDuration" type="xsd:double" use="optional"/>
        <xsd:attribute name="calcMinStartTime" type="xsd:double" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Activity" type="plm:ActivityType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!--	************************* WorkArea ***************************** -->
  <!-- -->
  <xsd:complexType name="WorkAreaType">
    <xsd:annotation>
      <xsd:documentation>
      The WorkArea is used to represent plant structure.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkArea" type="plm:WorkAreaType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************* WorkAreaRevision ********************* -->
  <!-- -->
  <xsd:complexType name="WorkAreaRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      A Revision of a WorkArea.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkAreaRevision" type="plm:WorkAreaRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************* Operation ******************************* -->
  <!-- -->
  <xsd:complexType name="OperationType">
    <xsd:annotation>
      <xsd:documentation>
      An Operation is a leaf node in the Process Structure.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Operation" type="plm:OperationType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************* OperationRevision ******************** -->
  <!-- -->
  <xsd:complexType name="OperationRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      A Revision of an Operation.
      
      Attributes:
      
      activityRef:   the root Activity under this Operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="activityRef" type="plm:anyURIType" use="optional" plm:refType="plm:Activity"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="OperationRevision" type="plm:OperationRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!--************************* Process ******************************** -->
  <!-- -->
  <xsd:complexType name="ProcessType">
    <xsd:annotation>
      <xsd:documentation>
      A Process is a subclass of Structure representing a Manufacturing Process.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Process" type="plm:ProcessType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************* ProcessRevision *********************** -->
  <!-- -->
  <xsd:complexType name="ProcessRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      A Revision of a Process
    
      Attributes
    
      productRefs:  
      plantRefs:
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="productRefs" type="plm:uriReferenceListType" use="optional" plm:deprecated="true"/>
        <xsd:attribute name="plantRefs" type="plm:uriReferenceListType" use="optional" plm:deprecated="true"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcessRevision" type="plm:ProcessRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************ ProcessView ***************************** -->
  <!-- -->
  <xsd:complexType name="ProcessViewType">
    <xsd:annotation>
      <xsd:documentation>
      ProcessView. This is a collection of Occurrences.
	   
      Attributes:
                           
      definition:     how the ProcessView is defined. 

      usage:          This optional attribute specifies the intent of the ProcessView. 
                      
      rootRefs:       specifies the root Occurrences, i.e. those which are not children
                      of other Occurrences in this ProcessView.
                      
      primaryOccurrenceRef: (deprecated). Used when there is only one root Occurrence.                
       
      SubElements:
      
      Occurrence:           Occurrences in the ProcessView.
      ConfiguredOccurrenceGroup: ConfiguredOccurrenceGroups in the ProcessView
      Transform:            Transforms which may be referenced by the Occurrences.
      LogicalAssignment: ProductLogicalAssignments or ToolRequirements in the
                        ProcessView.
      ManufacturingConstraint: PrecedenceConstraints in the ProcessView.
      </xsd:documentation>
      <!-- The elements inside the appinfo are not part of the actual schema, but are
	   processed by the CodeGenerator, and so appear in the PLM XML SDK run-time
	   model and API. -->
      <xsd:appinfo source="http://www.plmxml.org/tools/CodeGenerator">AdditionalElements=
      http://www.plmxml.org/Schemas/PLMXMLSchema:ConfiguredActivity ConfiguredActivity
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ConfigurationViewType">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="plm:Occurrence"/>
          <xsd:element ref="plm:ConfiguredOccurrenceGroup"/>
          <xsd:element ref="plm:Transform"/>
          <xsd:element ref="plm:LogicalAssignment"/>
          <xsd:element ref="plm:ManufacturingConstraint"/>
        </xsd:choice>
        <xsd:attribute name="rootRefs" type="xsd:IDREFS" use="optional" plm:refType="plm:Occurrence plm:ConfiguredOccurrenceGroup"/>
        <xsd:attribute name="definition" type="plm:ProductViewDefinitionType" use="optional"/>
        <xsd:attribute name="usage" type="plm:ProductViewUsageType" use="optional"/>
        <xsd:attribute name="primaryOccurrenceRef" type="xsd:IDREF" use="optional" plm:deprecated="true"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcessView" type="plm:ProcessViewType" substitutionGroup="plm:ConfigurationView"/>
  <!-- -->
  <!-- ************************ PlantView ***************************** -->
  <!-- -->
  <xsd:complexType name="PlantViewType">
    <xsd:annotation>
      <xsd:documentation>
      PlantView. This is a collection of Occurrences of Parts within one
      Assembly, i.e. it selects certain Occurrences, for example in order to
      display them.

      All the root Occurrences (given by rootRefs) must
      have the same 'top Structure'. This is called the 'top Structure' of the 
      PlantView.
	   
      Attributes:
      
      definition:     how the PlantView is defined.
                           
      usage:          This optional attribute specifies the intent of the PlantView. 
                      
      rootRefs:       specifies the root Occurrences, i.e. those which are not children
                      of other Occurrences in this PlantView.
                     
      primaryOccurrenceRef: (deprecated). Used when there is only one root Occurrence.
       
      SubElements:
      
      Occurrence:           the Occurrences in the PlantView.
      ConfiguredOccurrenceGroup: ConfiguredOccurrenceGroups in the PlantView
      Transform:            Transforms which may be referenced by the Occurrences.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ConfigurationViewType">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="plm:Occurrence"/>
          <xsd:element ref="plm:ConfiguredOccurrenceGroup"/>
          <xsd:element ref="plm:Transform"/>
        </xsd:choice>
        <xsd:attribute name="rootRefs" type="xsd:IDREFS" use="optional" plm:refType="plm:Occurrence plm:ConfiguredOccurrenceGroup"/>
        <xsd:attribute name="definition" type="plm:ProductViewDefinitionType" use="optional"/>
        <xsd:attribute name="usage" type="plm:ProductViewUsageType" use="optional"/>
        <xsd:attribute name="primaryOccurrenceRef" type="xsd:IDREF" use="optional" plm:deprecated="true"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PlantView" type="plm:PlantViewType" substitutionGroup="plm:ConfigurationView"/>
  <!-- -->
  <!-- ************************* ProcessDef ******************************* -->
  <!-- -->
  <xsd:complexType name="ProcessDefType">
    <xsd:annotation>
      <xsd:documentation>
      ProcessDef is a container element for the Process Structure.
    
      Attributes:
    
      rootRefs:

      Sub-elements:
    
      ProcessInstance
      StructureRevision
      ProcessView
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureDefBase">
        <xsd:sequence>
          <xsd:choice minOccurs="0" maxOccurs="unbounded">
            <xsd:element ref="plm:ProcessInstance" plm:deprecated="true"/>
            <xsd:element ref="plm:StructureRevision" plm:deprecated="true"/>
            <xsd:element ref="plm:ProcessView"/>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="rootRefs" type="xsd:IDREFS" use="optional" plm:deprecated="true"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcessDef" type="plm:ProcessDefType" substitutionGroup="plm:StructureDef"/>
  <!-- -->
  <!-- ************************* ProcessRevisionView ******************************* -->
  <!-- -->
  <xsd:complexType name="ProcessRevisionViewType">
    <xsd:annotation>
      <xsd:documentation>
      A 'View' of a ProcessRevision.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionViewBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcessRevisionView" type="plm:ProcessRevisionViewType" substitutionGroup="plm:StructureRevisionView"/>
  <!-- -->
  <!-- ************************* PlantDefType *********************** -->
  <!-- -->
  <xsd:complexType name="PlantDefType">
    <xsd:annotation>
      <xsd:documentation>
      PlantDef differs from ProductDef as it has the concept of stationFlow.
    
      Attributes:
    
      rootRefs:
    
      Sub-elements:
    
      PlantView:
      WorkAreaInstance:  
      WorkAreaRevision:  
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureDefBase">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="plm:WorkAreaInstance" plm:deprecated="true"/>
          <xsd:element ref="plm:WorkAreaRevision" plm:deprecated="true"/>
          <xsd:element ref="plm:PlantView"/>
        </xsd:choice>
        <xsd:attribute name="rootRefs" type="plm:uriReferenceListType" plm:deprecated="true"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PlantDef" type="plm:PlantDefType" substitutionGroup="plm:StructureDef"/>
  <!-- -->
  <!-- ************************* PlantRevisionView ******************************* -->
  <!-- -->
  <xsd:complexType name="PlantRevisionViewType">
    <xsd:annotation>
      <xsd:documentation>
      A 'View' of a WorkAreaRevision. 
    
      For legacy reasons this is called a PlantRevisionView, not a WorkAreaRevisionView.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionViewBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PlantRevisionView" type="plm:PlantRevisionViewType" substitutionGroup="plm:StructureRevisionView"/>
  <!-- -->
  <!-- ************************* ProcessStructureView ****************************** -->
  <!-- -->
  <xsd:complexType name="ProcessStructureViewType">
    <xsd:annotation>
      <xsd:documentation>
      This element represents a View of a Process, e.g. 'design' View.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureViewType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcessStructureView" type="plm:ProcessStructureViewType" substitutionGroup="plm:StructureView"/>
  <!-- -->
  <!-- ************************* WorkAreaStructureView ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkAreaStructureViewType">
    <xsd:annotation>
      <xsd:documentation>
      This element represents a View of a WorkArea, e.g. 'design' View.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureViewType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkAreaStructureView" type="plm:WorkAreaStructureViewType" substitutionGroup="plm:StructureView"/>
  <!-- -->
  <!-- ************************* ProcessOccurrence ****************************** -->
  <!-- -->
  <xsd:complexType name="ProcessOccurrenceType">
    <xsd:annotation>
      <xsd:documentation>
      This is a derived class of Occurrence, specific to Process Structure.
      
      Attributes:
      
      predecessorRefs:            list of predecessor ProcessOccurrences
      configuredActivityRootRef:
      originRef:        References the origin ProcessOccurrence. When the
                        ProcessOccurrence represents a Context, originRef
                        references its origin Context.
      logicalAssignmentRefs: References one or more Logical Assignments.
      constraintRefs:   References one or more Manufacturing Constraints.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:OccurrenceType">
        <xsd:attribute name="predecessorRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:ProcessOccurrence"/>
        <xsd:attribute name="configuredActivityRootRef" type="plm:anyURIType" use="optional" plm:refType="plm:ConfiguredActivity"/>
        <xsd:attribute name="originRef" type="plm:anyURIType" use="optional" plm:refType="plm:ProcessOccurrence" />
        <xsd:attribute name="logicalAssignmentRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:LogicalAssignment" />
        <xsd:attribute name="constraintRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:ManufacturingConstraint" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcessOccurrence" type="plm:ProcessOccurrenceType" substitutionGroup="plm:Occurrence"/>
  <!-- -->
  <!-- ************************* WorkAreaOccurrence ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkAreaOccurrenceType">
    <xsd:annotation>
      <xsd:documentation>
      This is a derived class of Occurrence, specific to WorkArea Structure.
      
      Attributes:
      
      predecessorRefs:            list of predecessor WorkAreaOccurrences
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:OccurrenceType">
        <xsd:attribute name="predecessorRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:WorkAreaOccurrence"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkAreaOccurrence" type="plm:WorkAreaOccurrenceType" substitutionGroup="plm:Occurrence"/>
  <!-- -->
  <!-- ************************* ConfiguredActivity ****************************** -->
  <!-- -->
  <xsd:complexType name="ConfiguredActivityType">
    <xsd:annotation>
      <xsd:documentation>
      This is a derived class of AssociatedAttachment, and represents a Configured
      Activity.
      
      Attributes:
      
      predecessorRefs:            list of predecessor ConfiguredActivity elements
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AssociatedAttachmentType">
        <xsd:attribute name="predecessorRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:ConfiguredActivity"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ConfiguredActivity" type="plm:ConfiguredActivityType" substitutionGroup="plm:AssociatedAttachment"/>
  <!-- -->
  <!-- ************************ LogicalAssignments ************************* -->
  <!-- -->
  <xsd:complexType name="LogicalAssignmentBase" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
      Logical assignment (abstract).

      Attributes:

      subType:          Indicates the sub-type of a customized Logical
                        Assignment.
      subTypeRef:       References a multiple language version of subType. If
                        multiple language support is required, subTypeRef should
                        be used in addition to subType.
      assignmentType:   The type of relationship between the Process Structure
                        element and the Product Structure Occurrences.
      assignmentTypeRef: References a multiple language version of
                        assignmentType. If multiple language support is
                        required, assignmentTypeRef should be used in addition
                        to assignmentType.
      assignmentRefs:   References to the Occurrences representing the
                        assignments.
      criteriaRef:      References a SetFilter or a ClassFilter that represents
                        the search criteria.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="subType" type="xsd:string" use="optional" />
        <xsd:attribute name="subTypeRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text" />
        <xsd:attribute name="assignmentType" type="xsd:string" use="optional" />
        <xsd:attribute name="assignmentTypeRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text" />
        <xsd:attribute name="assignmentRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:Occurrence" />
        <xsd:attribute name="criteriaRef" type="plm:anyURIType" use="optional" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="LogicalAssignment" type="plm:LogicalAssignmentBase" substitutionGroup="plm:AttribOwner" abstract="true" />
  <!-- -->
  <xsd:complexType name="ProductLogicalAssignmentType">
    <xsd:annotation>
      <xsd:documentation>
      Product logical assignment.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:LogicalAssignmentBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProductLogicalAssignment" type="plm:ProductLogicalAssignmentType" substitutionGroup="plm:LogicalAssignment" />
  <!-- -->
  <xsd:complexType name="ToolRequirementType">
    <xsd:annotation>
      <xsd:documentation>
      Tool requirement.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:LogicalAssignmentBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ToolRequirement" type="plm:ToolRequirementType" substitutionGroup="plm:LogicalAssignment" />
  <!-- -->
  <!-- ************************ ManufacturingConstraints ******************* -->
  <!-- -->
  <xsd:complexType name="ManufacturingConstraintBase" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
      Manufacturing constraint (abstract).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ManufacturingConstraint" type="plm:ManufacturingConstraintBase" substitutionGroup="plm:AttribOwner" abstract="true" />
  <!-- -->
  <xsd:complexType name="PrecedenceConstraintType">
    <xsd:annotation>
      <xsd:documentation>
      Precedence constraint.

      Attributes:

      implicit:         Whether the PrecedenceConstraint is real (false) or was
                        just calculated when exported (true).
      predecessorRef:   References the predecessor ProcessOccurrence.
      successorRef:     References the successor ProcessOccurrence.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManufacturingConstraintBase">
        <xsd:attribute name="implicit" type="xsd:boolean" default="false" />
        <xsd:attribute name="predecessorRef" type="plm:anyURIType" use="optional" plm:refType="plm:ProcessOccurrence" />
        <xsd:attribute name="successorRef" type="plm:anyURIType" use="optional" plm:refType="plm:ProcessOccurrence" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PrecedenceConstraint" type="plm:PrecedenceConstraintType" substitutionGroup="plm:ManufacturingConstraint" />
</xsd:schema>
