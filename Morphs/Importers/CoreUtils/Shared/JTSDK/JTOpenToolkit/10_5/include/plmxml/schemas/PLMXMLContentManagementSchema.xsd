<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright 2010 Siemens Product Lifecycle Management Software Inc. All Rights Reserved.
This software and related documentation are proprietary to 
Siemens Product Lifecycle Management Software Inc.
-->
<xsd:schema targetNamespace="http://www.plmxml.org/Schemas/PLMXMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:plm="http://www.plmxml.org/Schemas/PLMXMLSchema" xmlns:bus="http://www.plmxml.org/Schemas/PLMXMLBusinessSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" xml:lang="en">
  <xsd:include schemaLocation="PLMXMLPDMSchema.xsd"/>
  <xsd:import namespace="http://www.plmxml.org/Schemas/PLMXMLBusinessSchema" schemaLocation="PLMXMLBusinessSchema.xsd"/>
  <xsd:annotation>
    <xsd:documentation source="http://www.plmxml.org/Schemas/PLMXMLSchema/History">
      <plm:SchemaChange author="howardmu" date="2010-08-31" version="7.0.2.180">
        <plm:Description>
        Initial version.
        </plm:Description>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2011-05-26" version="7.0.2.223">
        <plm:Description>
        Add fileExtension attribute to TopicTyp.
        Add topic-to-topic relation.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='TopicTypType']/attribute[@name='fileExtension']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='TopicTypTopicTypRelationType']"/>
        <plm:Reference locationRef="..//schema/element[@name='TopicTypTopicTypRelation']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2016-03-24" version="7.0.4.414">
        <plm:Description>
        Add nonTopicClasses attribute to TopicTyp.
        Add fallbackRef attribute to Language.
        Add callback attribute to XMLAttributeRow.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='TopicTypType']/attribute[@name='nonTopicClasses']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='LanguageType']/attribute[@name='fallbackRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='XMLAttributeRowType']/attribute[@name='callback']"/>
      </plm:SchemaChange>
    </xsd:documentation>
    <xsd:documentation>

                              PLM XML Content Management Schema

    </xsd:documentation>
    <xsd:appinfo source="http://www.plmxml.org/Schemas/PLMXMLSchema">
      <plm:SchemaInfo name="PLMXMLContentManagementSchema.xsd" date="2010-08-31" version="6.0" status="release"/>
    </xsd:appinfo>
  </xsd:annotation>
  <!-- -->
  <!-- ************************ TopicTyp *********************************** -->
  <!-- -->
  <xsd:complexType name="TopicTypType">
    <xsd:annotation>
      <xsd:documentation>
      Used for organization of all data necessary to process and edit topics in
      Content Management.

      Attributes:

      prefix:           XML prefix to the tag identifying the start of the topic
                        of this type.
      uri:              The namespace URI for the prefix.
      systemUsage:      Value to identify if the object can be used by users or
                        only by the system processes and hidden from users.
      tagName:          The XML tag that identifies start of the topic of this
                        type.
      condition:        A condition that can be evaluated in determining the
                        TopicTyp.
      typeName:         Name for the topic type.
      validateExample:  Flag to indicate that the system should run a validation
                        of the example XML content against the schema for topics
                        of this type whenever the content is being saved into an
                        application.
      validateIncoming: Flag to indicate that the system should run a validation
                        of the XML content against the schema for topics of this
                        type whenever the content is being saved into an
                        application.
      validateOutgoing: Flag to indicate that the system should run a validation
                        of the XML content against the schema for topics of this
                        type whenever the content is being pulled from an
                        application for use in tools or other systems.
      className:        Type name for the TopicTyp.
      transferModeRef:  References a TransferMode for importing to or exporting
                        from an application.
      fileExtension:    The extension of the import file name.
      nonTopicClasses:  A list of non-topic type names, separated by comma.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="prefix" type="xsd:string" use="optional"/>
        <xsd:attribute name="uri" type="xsd:string" use="optional"/>
        <xsd:attribute name="systemUsage" type="xsd:string" use="optional"/>
        <xsd:attribute name="tagName" type="xsd:string" use="optional"/>
        <xsd:attribute name="condition" type="xsd:string" use="optional"/>
        <xsd:attribute name="typeName" type="xsd:string" use="optional"/>
        <xsd:attribute name="validateExample" type="xsd:boolean" default="false"/>
        <xsd:attribute name="validateIncoming" type="xsd:boolean" default="false"/>
        <xsd:attribute name="validateOutgoing" type="xsd:boolean" default="false"/>
        <xsd:attribute name="className" type="xsd:string" use="optional"/>
        <xsd:attribute name="transferModeRef" type="plm:anyURIType" use="optional" plm:refType="bus:TransferMode"/>
        <xsd:attribute name="fileExtension" type="xsd:string" use="optional"/>
        <xsd:attribute name="nonTopicClasses" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicTyp" type="plm:TopicTypType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ PublicationTyp ***************************** -->
  <!-- -->
  <xsd:complexType name="PublicationTypType">
    <xsd:annotation>
      <xsd:documentation>
      Special TopicTyp which can only be for a root of a structure of TopicTyps.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:TopicTypType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PublicationTyp" type="plm:PublicationTypType" substitutionGroup="plm:TopicTyp"/>
  <!-- -->
  <!-- ************************ RefTopicTyp ******************************** -->
  <!-- -->
  <xsd:complexType name="RefTopicTypType">
    <xsd:annotation>
      <xsd:documentation>
      Special TopicTyp with extra data used for building links and references to
      Topics.

      Attributes:

      fragmentTagNames: The XML tag in the content used to identify the
                        reference, string containing one or more types,
                        separated by comma.
      referenceType:    Type of reference.
      variant:          Variant to be applied when expanding the reference.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:TopicTypType">
        <xsd:attribute name="fragmentTagNames" type="xsd:string" use="optional"/>
        <xsd:attribute name="referenceType" type="xsd:string" use="optional"/>
        <xsd:attribute name="variant" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="RefTopicTyp" type="plm:RefTopicTypType" substitutionGroup="plm:TopicTyp"/>
  <!-- -->
  <!-- ************************ TransformationPolicy *********************** -->
  <!-- -->
  <xsd:complexType name="TransformPolicyType">
    <xsd:annotation>
      <xsd:documentation>
      Stores a table that can be used to attach content transformations or
      scripts to certain actions.

      Attributes:

      comment:          Administrator notes about the object.
      policyName:       Name for the Policy object.
      tableRefs:        References to rows in the transformation policy table.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="comment" type="xsd:string" use="optional"/>
        <xsd:attribute name="policyName" type="xsd:string" use="optional"/>
        <xsd:attribute name="tableRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:TransformPolicyRow"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TransformPolicy" type="plm:TransformPolicyType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ StyleTyp *********************************** -->
  <!-- -->
  <xsd:complexType name="StyleTypType">
    <xsd:annotation>
      <xsd:documentation>
      Used to organize style sheets for different tools which represent the same
      style or branding.

      Attributes:

      typeName:         Name of the style type.
      systemUsage:      Value to identify if the object can be used by users or
                        only by the system processes and hidden from users.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="typeName" type="xsd:string" use="optional"/>
        <xsd:attribute name="systemUsage" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="StyleTyp" type="plm:StyleTypType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ CMTool ************************************* -->
  <!-- -->
  <xsd:complexType name="CMToolType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
      The abstract class bundles all classes used for accessing tools from the
      Content Management client or server.

      Attributes:

      command:          The command string for running external executables,
                        with substitutions for the content file, the schema if
                        needed, the style sheet if needed and other command
                        options depending on the tool.
      systemUsage:      Value to identify if the object can be used by users or
                        only by the system processes and hidden from users.
      path:             The default install path for the tool.
      graphicPriorityRef: Reference to the GraphicPriorityList object to resolve
                        usage of graphics for the tool.
      downloadGraphics: Specifies if graphics should be downloaded for use by
                        the tool.
      downloadSchema:   Specifies if schema files should be downloaded for use
                        by the tool.
      downloadStyleSheet: Specifies if style sheets should be downloaded for use
                        by the tool.
      processInstruction: Used to pass something to the publish process that is
                        used but is not part of the input content.
      activation:       The client java class used to invoke to launch the tool.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="command" type="xsd:string" use="optional"/>
        <xsd:attribute name="systemUsage" type="xsd:string" use="optional"/>
        <xsd:attribute name="path" type="xsd:string" use="optional"/>
        <xsd:attribute name="graphicPriorityRef" type="plm:anyURIType" use="optional" plm:refType="plm:GraphicPriorityList"/>
        <xsd:attribute name="downloadGraphics" type="xsd:boolean" default="false"/>
        <xsd:attribute name="downloadSchema" type="xsd:boolean" default="false"/>
        <xsd:attribute name="downloadStyleSheet" type="xsd:boolean" default="false"/>
        <xsd:attribute name="processInstruction" type="xsd:string" use="optional"/>
        <xsd:attribute name="activation" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CMTool" type="plm:CMToolType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ CompareTool ******************************** -->
  <!-- -->
  <xsd:complexType name="CompareToolType" >
    <xsd:annotation>
      <xsd:documentation>
      Stores information necessary to launch a compare application.

      Attributes:

      outputState:      The Compare tool output usage.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CMToolType">
        <xsd:attribute name="outputState" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CompareTool" type="plm:CompareToolType" substitutionGroup="plm:CMTool"/>
  <!-- -->
  <!-- ************************ EditTool *********************************** -->
  <!-- -->
  <xsd:complexType name="EditToolType" >
    <xsd:annotation>
      <xsd:documentation>
      Stores information necessary to launch an editing application.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CMToolType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="EditTool" type="plm:EditToolType" substitutionGroup="plm:CMTool"/>
  <!-- -->
  <!-- ************************ PublishTool ******************************** -->
  <!-- -->
  <xsd:complexType name="PublishToolType" >
    <xsd:annotation>
      <xsd:documentation>
      Stores information necessary to launch internal or external publishing
      engines.

      Attributes:

      local:            Flag to indicate the tool is a client side tool rather
                        than a server tool.
      numberOfInstances: Record the number of licenses for a specific tool.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CMToolType">
        <xsd:attribute name="local" type="xsd:boolean" default="false"/>
        <xsd:attribute name="numberOfInstances" type="xsd:integer" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PublishTool" type="plm:PublishToolType" substitutionGroup="plm:CMTool"/>
  <!-- -->
  <!-- ************************ TransformationTool ************************* -->
  <!-- -->
  <xsd:complexType name="TransformToolType" >
    <xsd:annotation>
      <xsd:documentation>
      Stores information necessary for supporting the Word document import
      implementation, which needs to run a transformation before importing.

      Attributes:

      outputState:      Describes the file to use from the results of the
                        transformation tool run.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CMToolType">
        <xsd:attribute name="outputState" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TransformTool" type="plm:TransformToolType" substitutionGroup="plm:CMTool"/>
  <!-- -->
  <!-- ************************ ViewTool *********************************** -->
  <!-- -->
  <xsd:complexType name="ViewToolType" >
    <xsd:annotation>
      <xsd:documentation>
      Stores information necessary to launch a viewing application.

      Attributes:

      contentType:      The type of content that can be viewed by the view
                        tool.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CMToolType">
        <xsd:attribute name="contentType" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ViewTool" type="plm:ViewToolType" substitutionGroup="plm:CMTool"/>
  <!-- -->
  <!-- ************************ XMLAttributeMap **************************** -->
  <!-- -->
  <xsd:complexType name="XMLAttributeMapType">
    <xsd:annotation>
      <xsd:documentation>
      Is used to control the moving of meta data from contents to objects and
      vice versa.

      Attributes:

      comment:          Administrator notes about the object.
      namespaceTableRefs: Reference to the rows of the Namespaces table.
      mapName:          Name for the Attribute Map.
      tableRefs:        References to the rows of the XML Attribute Map table.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="comment" type="xsd:string" use="optional"/>
        <xsd:attribute name="namespaceTableRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:NamespaceRow"/>
        <xsd:attribute name="mapName" type="xsd:string" use="optional"/>
        <xsd:attribute name="tableRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:XMLAttributeRow"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="XMLAttributeMap" type="plm:XMLAttributeMapType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ GraphicAttributeMap ************************ -->
  <!-- -->
  <xsd:complexType name="GraphicAttributeMapType">
    <xsd:annotation>
      <xsd:documentation>
      Is used for graphic properties generation during the import of graphics
      into a Content Management system.

      Attributes:

      comment:          Administrator notes about the object.
      tableRefs:        References to the rows in the graphic attribute mapping
                        table.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="comment" type="xsd:string" use="optional"/>
        <xsd:attribute name="tableRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:GraphicAttributeRow"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GraphicAttributeMap" type="plm:GraphicAttributeMapType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ GraphicPriorityList ************************ -->
  <!-- -->
  <xsd:complexType name="GraphicPriorityListType">
    <xsd:annotation>
      <xsd:documentation>
      Stores a list used to control the order in which graphic properties are
      selected for a Graphic during content processing.

      Attributes:

      comment:          Administrator notes about the object.
      usages:           Priority list of usages for a graphic, string containing
                        one or more usage, separated by comma.
      maxOptions:       For publishing to media where more than one graphic file
                        should be made available.
      priorityName:     Name for the Graphic Priority List.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="comment" type="xsd:string" use="optional"/>
        <xsd:attribute name="usages" type="xsd:string" use="optional"/>
        <xsd:attribute name="maxOptions" type="xsd:integer" use="optional"/>
        <xsd:attribute name="priorityName" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GraphicPriorityList" type="plm:GraphicPriorityListType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ Language *********************************** -->
  <!-- -->
  <xsd:complexType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>
      Stores data for a language available for translation of document or topic
      content.

      Attributes:

      comment:          Administrator notes about the object.
      publishFont:      For any publish language, there are different fonts used
                        for the output, default for publishing.
      countryCode:      The ISO 639-1 standard country code for the language.
      languageCode:     The ISO 639-1 standard code for the language.
      languageDescription: Any description of the language.
      fileInitials:     The initials for filenames where the language is
                        embedded into the filename.
      languageName:     Name of the language.
      fallbackRef:      References a fallback language to use if a translation
                        to this language does not exist.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="comment" type="xsd:string" use="optional"/>
        <xsd:attribute name="publishFont" type="xsd:string" use="optional"/>
        <xsd:attribute name="countryCode" type="xsd:string" use="optional"/>
        <xsd:attribute name="languageCode" type="xsd:string" use="optional"/>
        <xsd:attribute name="languageDescription" type="xsd:string" use="optional"/>
        <xsd:attribute name="fileInitials" type="xsd:string" use="optional"/>
        <xsd:attribute name="languageName" type="xsd:string" use="optional"/>
        <xsd:attribute name="fallbackRef" type="plm:anyURIType" use="optional" plm:refType="plm:Language"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Language" type="plm:LanguageType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ DITAValueFilter **************************** -->
  <!-- -->
  <xsd:complexType name="DITAValueFilterType">
    <xsd:annotation>
      <xsd:documentation>
      The DITA value filter is selected at the time of publish.

      Attributes:

      filterName:       Name of the filter.
      tableRefs:        References to the rows of the filter table for this
                        filter.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="filterName" type="xsd:string" use="optional"/>
        <xsd:attribute name="tableRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:DITAValueFilterRow"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DITAValueFilter" type="plm:DITAValueFilterType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ ExtEntAdmin ******************************** -->
  <!-- -->
  <xsd:complexType name="ExtEntAdminType">
    <xsd:annotation>
      <xsd:documentation>
      External entity administration class bundles all the supporting data
      classes, which are primarily identified by a public ID attribute.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ExtEntAdmin" type="plm:ExtEntAdminType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************ CMSchema *********************************** -->
  <!-- -->
  <xsd:complexType name="CMSchemaType">
    <xsd:annotation>
      <xsd:documentation>
      Is used to store the contents of supporting data necessary to process XML
      or SGML.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ExtEntAdminType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CMSchema" type="plm:CMSchemaType" substitutionGroup="plm:ExtEntAdmin"/>
  <!-- -->
  <!-- ************************ XMLSchema ********************************** -->
  <!-- -->
  <xsd:complexType name="XMLSchemaType">
    <xsd:annotation>
      <xsd:documentation>
      Stores some additional data necessary to work with Schemas that use the
      XML Schema standard.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CMSchemaType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="XMLSchema" type="plm:XMLSchemaType" substitutionGroup="plm:CMSchema"/>
  <!-- -->
  <!-- ************************ StyleSheet ********************************* -->
  <!-- -->
  <xsd:complexType name="StyleSheetType">
    <xsd:annotation>
      <xsd:documentation>
      Stores data used for transformation of content.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ExtEntAdminType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="StyleSheet" type="plm:StyleSheetType" substitutionGroup="plm:ExtEntAdmin"/>
  <!-- -->
  <!-- ************************ Procedure ********************************** -->
  <!-- -->
  <xsd:complexType name="ProcedureType">
    <xsd:annotation>
      <xsd:documentation>
      Stores scripts in a scripting language that are used for content
      transformations or to dynamically extend business functions in Content
      Management.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Procedure" type="plm:ProcedureType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************ TopicTypGroup ****************************** -->
  <!-- -->
  <xsd:complexType name="TopicTypGroupType">
    <xsd:annotation>
      <xsd:documentation>
      Topic Type Group.

      Attributes:

      groupName:        Name for the Topic Type Group, used for users setting
                        client preference for group of topics that they want to
                        use.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:FolderType">
        <xsd:attribute name="groupName" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicTypGroup" type="plm:TopicTypGroupType" substitutionGroup="plm:Folder"/>
  <!-- -->
  <!-- ************************ ExtEntAdminRevision ************************ -->
  <!-- -->
  <xsd:complexType name="ExtEntAdminRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      This class is the Revision of the external entity administration class.

      Attributes:

      publicId:         The XML string used inside the file to identify the
                        content for tools.
      systemId:         The filename for the content.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="publicId" type="xsd:string" use="optional"/>
        <xsd:attribute name="systemId" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ExtEntAdminRevision" type="plm:ExtEntAdminRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************ CMSchemaRevision *************************** -->
  <!-- -->
  <xsd:complexType name="CMSchemaRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      This is the Revision Schema.

      Attributes:

      contentSize:      Disk size needed for the content.
      schemaType:       Type of schema.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ExtEntAdminRevisionType">
        <xsd:attribute name="contentSize" type="xsd:integer" use="optional"/>
        <xsd:attribute name="schemaType" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CMSchemaRevision" type="plm:CMSchemaRevisionType" substitutionGroup="plm:ExtEntAdminRevision"/>
  <!-- -->
  <!-- ************************ XMLSchemaRevision ************************** -->
  <!-- -->
  <xsd:complexType name="XMLSchemaRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      This is the Revision for XMLSchema.

      Attributes:

      prefix:           Default XML prefix to the tags identified in the schema.
      location:         Similar to the namespace URI, for the schema public ID
                        that corresponds to the prefix.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:CMSchemaRevisionType">
        <xsd:attribute name="prefix" type="xsd:string" use="optional"/>
        <xsd:attribute name="location" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="XMLSchemaRevision" type="plm:XMLSchemaRevisionType" substitutionGroup="plm:CMSchemaRevision"/>
  <!-- -->
  <!-- ************************ StyleSheetRevision ************************* -->
  <!-- -->
  <xsd:complexType name="StyleSheetRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Revision of StyleSheet.

      Attributes:

      contentSize:      Disk size needed for the content.
      mainFile:         The name of the file in the zip to start with.
      contentType:      Content type that the style sheet is intended for.
      styleSheetType:   Style sheet type.
      target:           The ANT target parameter for publishing tools driven by
                        ANT processing.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ExtEntAdminRevisionType">
        <xsd:attribute name="contentSize" type="xsd:integer" use="optional"/>
        <xsd:attribute name="mainFile" type="xsd:string" use="optional"/>
        <xsd:attribute name="contentType" type="xsd:string" use="optional"/>
        <xsd:attribute name="styleSheetType" type="xsd:string" use="optional"/>
        <xsd:attribute name="target" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="StyleSheetRevision" type="plm:StyleSheetRevisionType" substitutionGroup="plm:ExtEntAdminRevision"/>
  <!-- -->
  <!-- ************************ ProcedureRevision ************************** -->
  <!-- -->
  <xsd:complexType name="ProcedureRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Revision of the Procedure.

      Attributes:

      contentSize:      Disk size needed for the content.
      procedureName:    Name of the procedure object.
      usage:            The procedure usage describes when the procedure is
                        designed to be used.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="contentSize" type="xsd:integer" use="optional"/>
        <xsd:attribute name="procedureName" type="xsd:string" use="optional"/>
        <xsd:attribute name="usage" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProcedureRevision" type="plm:ProcedureRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************ GraphicAttributeRow ************************ -->
  <!-- -->
  <xsd:complexType name="GraphicAttributeRowType">
    <xsd:annotation>
      <xsd:documentation>
      Represents the rows used to load and export graphic files, to provide the
      capability to extract information from filenames being imported or to
      prepare the correct filename when writing the file.

      Attributes:

      attributeName:    The property name.
      capitalizationBehavior: Control for setting lowercase or uppercase on
                        field values.
      value:            An optional literal string.
      fieldName:        An internal name for the portion of the filename being
                        addressed or the XML tag value which applies.
      fieldSeparator:   The divider character used when separating the filename
                        into the specified field.
      fieldLength:      The field length if it is a fixed length field.
      function:         The function being invoked to which the attribute
                        exchange row applies.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:attribute name="attributeName" type="xsd:string" use="optional"/>
        <xsd:attribute name="capitalizationBehavior" type="xsd:string" use="optional"/>
        <xsd:attribute name="value" type="xsd:string" use="optional"/>
        <xsd:attribute name="fieldName" type="xsd:string" use="optional"/>
        <xsd:attribute name="fieldSeparator" type="xsd:string" use="optional"/>
        <xsd:attribute name="fieldLength" type="xsd:integer" use="optional"/>
        <xsd:attribute name="function" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GraphicAttributeRow" type="plm:GraphicAttributeRowType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ************************ XMLAttributeRow **************************** -->
  <!-- -->
  <xsd:complexType name="XMLAttributeRowType">
    <xsd:annotation>
      <xsd:documentation>
      Represents the rows of specified interchange of metadata with topic
      content.

      Attributes:

      procedureRef:     Reference to the ProcedureRevision to be used for
                        transformation, if any.
      attributeName:    The property name.
      value:            An optional literal string.
      fieldSeparator:   The divider character used when separating a value into
                        the specified field.
      fieldLength:      The field length if it is a fixed length field.
      function:         The function being invoked to which the attribute
                        exchange row applies.
      omitEmpty:        Flag to skip exchange if value is empty, or to pass an
                        empty string.
      path:             The XML content path to where the value is to be fetched
                        or put.
      callback:         An optional callback function.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:attribute name="procedureRef" type="plm:anyURIType" use="optional" plm:refType="plm:ProcedureRevision"/>
        <xsd:attribute name="attributeName" type="xsd:string" use="optional"/>
        <xsd:attribute name="value" type="xsd:string" use="optional"/>
        <xsd:attribute name="fieldSeparator" type="xsd:string" use="optional"/>
        <xsd:attribute name="fieldLength" type="xsd:integer" use="optional"/>
        <xsd:attribute name="function" type="xsd:string" use="optional"/>
        <xsd:attribute name="omitEmpty" type="xsd:boolean" default="false"/>
        <xsd:attribute name="path" type="xsd:string" use="optional"/>
        <xsd:attribute name="callback" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="XMLAttributeRow" type="plm:XMLAttributeRowType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ************************ LanguageRow ******************************** -->
  <!-- -->
  <xsd:complexType name="LanguageRowType">
    <xsd:annotation>
      <xsd:documentation>
      Language table.

      Attributes:

      languageRef:      Reference to the language for this row of the languages
                        table.
      reviewOrdered:    Flag to indicate if a review is needed on the content
                        returned.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:attribute name="languageRef" type="plm:anyURIType" use="optional" plm:refType="plm:Language"/>
        <xsd:attribute name="reviewOrdered" type="xsd:boolean" default="false"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="LanguageRow" type="plm:LanguageRowType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ************************ NamespaceRow ******************************* -->
  <!-- -->
  <xsd:complexType name="NamespaceRowType">
    <xsd:annotation>
      <xsd:documentation>
      Represents the rows of XML prefix values used with their full URI, used in
      the attribute mapping when finding values to replace.

      Attributes:

      uri:              The namespace URI corresponding to the prefix used.
      prefix:           XML prefix used for the namespace.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:attribute name="uri" type="xsd:string" use="optional"/>
        <xsd:attribute name="prefix" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NamespaceRow" type="plm:NamespaceRowType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ************************ TransformationPolicyRow ******************** -->
  <!-- -->
  <xsd:complexType name="TransformPolicyRowType">
    <xsd:annotation>
      <xsd:documentation>
      Represents the table of procedures to be run based upon the Tool,
      StyleSheet, and user action.

      Attributes:

      procedureRef:     Reference to the procedure revision to be used for
                        transformation, if any.
      toolRef:          Reference to the transformation tool which implements
                        the transformation.
      userAction:       User action which requires a transformation policy to be
                        run.
      styleSheetRef:    Reference to StyleSheet.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:attribute name="procedureRef" type="plm:anyURIType" use="optional" plm:refType="plm:ProcedureRevision"/>
        <xsd:attribute name="toolRef" type="plm:anyURIType" use="optional" plm:refType="plm:TransformTool"/>
        <xsd:attribute name="userAction" type="xsd:string" use="optional"/>
        <xsd:attribute name="styleSheetRef" type="plm:anyURIType" use="optional" plm:refType="plm:StyleSheetRevision"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TransformPolicyRow" type="plm:TransformPolicyRowType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ************************ DITAValueFilterRow ************************* -->
  <!-- -->
  <xsd:complexType name="DITAValueFilterRowType">
    <xsd:annotation>
      <xsd:documentation>
      The DITA Value filter table lists the rows that control the selection of
      content during publish.

      Attributes:

      action:           The action to be taken.
      attributeName:    The attribute name on the topic to be compared to the
                        value.
      value:            The value to match the value of the property in the
                        topic, when making the selection for what content to
                        publish using the DITA value filter.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:attribute name="action" type="xsd:string" use="optional"/>
        <xsd:attribute name="attributeName" type="xsd:string" use="optional"/>
        <xsd:attribute name="value" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DITAValueFilterRow" type="plm:DITAValueFilterRowType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ************************ Topic to XML Attribute Map Relation ******** -->
  <!-- -->
  <xsd:complexType name="TopicTypXMLAttributeMapRelationType">
    <xsd:annotation>
      <xsd:documentation>This relation relates a TopicTyp to a XML Attribute Map.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicTypXMLAttributeMapRelation" type="plm:TopicTypXMLAttributeMapRelationType" substitutionGroup="plm:GeneralRelation" />
  <!-- -->
  <!-- ************************ Topic to Transformation Policy Relation **** -->
  <!-- -->
  <xsd:complexType name="TopicTypTransformPolicyRelationType">
    <xsd:annotation>
      <xsd:documentation>This relation relates a TopicTyp to a Transformation Policy.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicTypTransformPolicyRelation" type="plm:TopicTypTransformPolicyRelationType" substitutionGroup="plm:GeneralRelation" />
  <!-- -->
  <!-- ************************ Topic to StyleSheet Relation *************** -->
  <!-- -->
  <xsd:complexType name="TopicTypStyleSheetRelationType">
    <xsd:annotation>
      <xsd:documentation>This relation relates a TopicTyp to a StyleSheet.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicTypStyleSheetRelation" type="plm:TopicTypStyleSheetRelationType" substitutionGroup="plm:GeneralRelation" />
  <!-- -->
  <!-- ************************ Topic to CMSchema Relation ***************** -->
  <!-- -->
  <xsd:complexType name="TopicTypSchemaRelationType">
    <xsd:annotation>
      <xsd:documentation>This relation relates a TopicTyp to a CMSchema.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicTypSchemaRelation" type="plm:TopicTypSchemaRelationType" substitutionGroup="plm:GeneralRelation" />
  <!-- -->
  <!-- ************************ StyleSheet to Tool Relation **************** -->
  <!-- -->
  <xsd:complexType name="StyleSheetToolRelationType">
    <xsd:annotation>
      <xsd:documentation>This relation relates a StyleSheet to a Tool.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="StyleSheetToolRelation" type="plm:StyleSheetToolRelationType" substitutionGroup="plm:GeneralRelation" />
  <!-- -->
  <!-- ************************ StyleType to StyleSheet Relation *********** -->
  <!-- -->
  <xsd:complexType name="StyleTypeStyleSheetRelationType">
    <xsd:annotation>
      <xsd:documentation>This relation relates a StyleType to a StyleSheet.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="StyleTypeStyleSheetRelation" type="plm:StyleTypeStyleSheetRelationType" substitutionGroup="plm:GeneralRelation" />
  <!-- -->
  <!-- ************************ Topic to Topic Relation ******************** -->
  <!-- -->
  <xsd:complexType name="TopicTypTopicTypRelationType">
    <xsd:annotation>
      <xsd:documentation>This relation relates a TopicTyp to another TopicTyp.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicTypTopicTypRelation" type="plm:TopicTypTopicTypRelationType" substitutionGroup="plm:GeneralRelation" />
</xsd:schema>
