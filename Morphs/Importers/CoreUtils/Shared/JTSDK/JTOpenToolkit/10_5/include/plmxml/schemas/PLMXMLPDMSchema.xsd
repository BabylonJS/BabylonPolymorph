<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright 2008 Siemens Product Lifecycle Management Software Inc. All Rights Reserved.
This software and related documentation are proprietary to 
Siemens Product Lifecycle Management Software Inc.
-->
<xsd:schema targetNamespace="http://www.plmxml.org/Schemas/PLMXMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:plm="http://www.plmxml.org/Schemas/PLMXMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xsd:include schemaLocation="PLMXMLSchema.xsd"/>
  <xsd:annotation>
    <xsd:documentation source="http://www.plmxml.org/Schemas/PLMXMLSchema/History">
      <plm:SchemaChange author="davidj" date="2005-05-11" version="6.0.1.26">
        <plm:Description>
        Add GroupByTypeRuleEntry element.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='GroupByTypeRuleEntryType']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="davidj" date="2005-10-24" version="6.0.1.26">
        <plm:Description>
        Add plm:refType attribute to various attributes.
        </plm:Description>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-04-16" version="6.0.2.108">
        <plm:Description>
        Add support for Vendor Management.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='VendorType']"/>
        <plm:Reference locationRef="..//schema/element[@name='Vendor']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='VendorRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='VendorRevision']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='VendorRoleEnum']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='VendorCertificationEnum']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='VendorApprovalEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='VendorRoleType']"/>
        <plm:Reference locationRef="..//schema/element[@name='VendorRole']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='VendorPartRelationType']"/>
        <plm:Reference locationRef="..//schema/element[@name='VendorPartRelation']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='BidPackageType']"/>
        <plm:Reference locationRef="..//schema/element[@name='BidPackage']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='LineItemConfigurationContextType']"/>
        <plm:Reference locationRef="..//schema/element[@name='LineItemConfigurationContext']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='LineItemType']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='BidPackageRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='BidPackageRevision']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='QuoteType']"/>
        <plm:Reference locationRef="..//schema/element[@name='Quote']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-04-24" version="7.0.0.15">
        <plm:Description>
        Multiple language text added.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowProcessType']/attribute[@name='templateNameRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='RelatedItemType']/attribute[@name='typeRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ChangeType']/attribute[@name='typeRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='locationRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='objectTypeRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='StatusRuleEntryType']/attribute[@name='statusRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='IdentifierType']/attribute[@name='idContextRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationCheckerType']/attribute[@name='nameRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationCheckerType']/attribute[@name='commentsRef']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-04-29" version="7.0.0.15">
        <plm:Description>
        Move VendorRoleEnum from the PDM schema to the base schema and rename to
        OrganisationRoleEnum.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='VendorRoleEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='VendorRoleType']/attribute[@name='type']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-05-07" version="7.0.0.21">
        <plm:Description>
        Allow user-definable properties on elements that represent
        relationships.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='AssociatedFolderType']/element[@ref='UserData']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='AssociatedFormType']/element[@ref='UserData']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-05-16" version="7.0.0.25">
        <plm:Description>
        ValidationResults enhancements.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationCheckerType']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultsType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationResults']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='CheckerParameterType']"/>
        <plm:Reference locationRef="..//schema/element[@name='CheckerParameter']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationResult']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='DesignRequirementType']"/>
        <plm:Reference locationRef="..//schema/element[@name='DesignRequirement']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='DesignRequirementRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='DesignRequirementRevision']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationRequirementType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationRequirement']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationRequirementRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationRequirementRevision']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='MeasureEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationParameterType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationParameter']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationExpressionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationExpression']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-06-04" version="7.0.0.30">
        <plm:Description>
        Add active, visible and useProjectSecurity to Project.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ProjectType']/attribute[@name='active']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ProjectType']/attribute[@name='visible']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ProjectType']/attribute[@name='useProjectSecurity']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-06-25" version="7.0.0.42">
        <plm:Description>
        Workflow Dynamic Participants added.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='ParticipantEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ParticipantType']"/>
        <plm:Reference locationRef="..//schema/element[@name='Participant']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-12-15" version="7.0.0.55">
        <plm:Description>
        requirementRef added to ValidationResult.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultType']/attribute[@name='requirementRef']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2008-12-15" version="7.0.0.55">
        <plm:Description>
        Allow Custom Participants.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='ParticipantEnum']/enumeration[@value='userDefined']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ParticipantType']/attribute[@name='userDefinedType']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2009-03-04" version="7.0.1.15">
        <plm:Description>
        Validation Results Changes.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultType']/attribute[@name='reportRefs']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultType']/attribute[@name='targetRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultType']/attribute[@name='commentsRef']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2009-03-13" version="7.0.1.15">
        <plm:Description>
        Add waitForUndecidedReviewers to WorkflowTemplate.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='WorkflowTemplateUndecidedReviewersEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='waitForUndecidedReviewers']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2009-06-01" version="7.0.1.47">
        <plm:Description>
        Add OverrideApproval.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultType']/attribute[@name='overrideApprovalRef']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='OverrideEnum']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='OverrideStateEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='OverrideApprovalType']"/>
        <plm:Reference locationRef="..//schema/element[@name='OverrideApproval']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2009-07-22" version="7.0.1.67">
        <plm:Description>
        Allow RevisionRule with no RuleEntry sub-elements.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='RevisionRuleType']/element[@ref='RuleEntry']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2009-08-27" version="7.0.1.73">
        <plm:Description>
        Add userRef to Signoff.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='SignoffType']/attribute[@name='userRef']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2009-09-22" version="7.0.1.75">
        <plm:Description>
        Bring validation into the managed environment.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationResultType']/attribute[@name='checkRef']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationCheckType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationCheck']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationCheckRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationCheckRevision']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationAgentType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationAgent']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ValidationAgentRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ValidationAgentRevision']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='IssueReviewDecisionEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='IssueReviewType']"/>
        <plm:Reference locationRef="..//schema/element[@name='IssueReview']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2010-02-17" version="7.0.2.123">
        <plm:Description>
        Process Assignment List.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='AssignmentListType']"/>
        <plm:Reference locationRef="..//schema/element[@name='AssignmentList']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='ResourceListActionEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ResourceListItemType']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ResourceListType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ResourceList']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2010-03-23" version="7.0.2.135">
        <plm:Description>
        Add failed value to TaskStateType.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='TaskStateType']/enumeration[@value='failed']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2010-03-23" version="7.0.2.135">
        <plm:Description>
        Add originalId attribute to WorkflowTemplateType.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='originalId']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2011-01-12" version="7.0.2.218">
        <plm:Description>
        Add asynchronous attribute to WorkflowTemplateType.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='asynchronous']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2012-03-30" version="7.0.3.264">
        <plm:Description>
        Add support for incremental changes.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='IncrementalChangeType']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ChangeOrderType']/element[@name='IncrementalChangeAdd']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ChangeOrderType']/element[@name='IncrementalChangeDelete']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ChangeRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ChangeRevision']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='IncChangeEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='IncChangeType']"/>
        <plm:Reference locationRef="..//schema/element[@name='IncChange']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2012-07-24" version="7.0.3.270">
        <plm:Description>
        Add Associated Attributes.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='MeasureEnum']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2013-12-04" version="7.0.4.338">
        <plm:Description>
        Add support for Diagrams.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='DiagramToolEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='DiagramTemplateType']"/>
        <plm:Reference locationRef="..//schema/element[@name='DiagramTemplate']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='DiagramTemplateRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='DiagramTemplateRevision']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='DiagramType']"/>
        <plm:Reference locationRef="..//schema/element[@name='Diagram']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='DiagramRevisionType']"/>
        <plm:Reference locationRef="..//schema/element[@name='DiagramRevision']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='ShapeMembershipEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='ShapeRelationType']"/>
        <plm:Reference locationRef="..//schema/element[@name='ShapeRelation']"/>
        <plm:Reference locationRef="..//schema/element[@name='DiagramRule']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2014-07-15" version="7.0.4.368">
        <plm:Description>
        Workflow enhancements.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='SignoffRequiredEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='SignoffType']/attribute[@name='signoffRequired']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='filterCondition']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowSignoffProfileType']/attribute[@name='signoffRequired']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2014-07-18" version="7.0.4.369">
        <plm:Description>
        Workflow enhancements.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='ResourceListActionEnum']/enumeration[@value='reviewRequired']"/>
        <plm:Reference locationRef="..//schema/simpleType[@name='ResourceListActionEnum']/enumeration[@value='acknowledgeRequired']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2015-11-03" version="7.0.4.389">
        <plm:Description>
        Add decisionSet attribute to WorkflowTemplate.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='decisionSet']"/>
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2016-06-01" version="7.0.4.415">
        <plm:Description>
        Add activeSurrogateRef and assignerRef attributes and Attribute sub-element to Signoff.
        Add responsiblePartyRef, activeSurrogateRef, assignerRef and userRef attributes to Task.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='SignoffType']/element[@ref='plm:Attribute']" />
        <plm:Reference locationRef="..//schema/complexType[@name='SignoffType']/attribute[@name='activeSurrogateRef']" />
        <plm:Reference locationRef="..//schema/complexType[@name='SignoffType']/attribute[@name='assignerRef']" />
        <plm:Reference locationRef="..//schema/complexType[@name='TaskType']/attribute[@name='responsiblePartyRef']" />
        <plm:Reference locationRef="..//schema/complexType[@name='TaskType']/attribute[@name='activeSurrogateRef']" />
        <plm:Reference locationRef="..//schema/complexType[@name='TaskType']/attribute[@name='assignerRef']" />
        <plm:Reference locationRef="..//schema/complexType[@name='TaskType']/attribute[@name='userRef']" />
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2016-06-20" version="7.0.4.416">
        <plm:Description>
        Add support for 4GD.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='ClosureRuleType']/attribute[@name='searchCriteriaRef']" />
        <plm:Reference locationRef="..//schema/complexType[@name='AttributeGroupType']" />
        <plm:Reference locationRef="..//schema/element[@name='AttributeGroup']" />
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2016-06-22" version="7.0.4.417">
        <plm:Description>
        Add Palette of Model View Lists for Disclosures.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='PaletteType']" />
        <plm:Reference locationRef="..//schema/element[@name='Palette']" />
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2017-05-19" version="7.0.5.488">
        <plm:Description>
        Add groupType to GroupByTypeRuleEntry.
        </plm:Description>
        <plm:Reference locationRef="..//schema/simpleType[@name='GroupTypeEnum']"/>
        <plm:Reference locationRef="..//schema/complexType[@name='GroupByTypeRuleEntryType']/attribute[@name='groupType']" />
      </plm:SchemaChange>
      <plm:SchemaChange author="howardmu" date="2018-09-06" version="7.0.6.15">
        <plm:Description>
        Add storeParticipantsOnWorkflowProcess and requireCompleteConfirmation attributes to WorkflowTemplate.
        </plm:Description>
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/element[@name='DependencyTaskActions']" />
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/element[@name='DependencyTaskTemplates']" />
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='storeParticipantsOnWorkflowProcess']" />
        <plm:Reference locationRef="..//schema/complexType[@name='WorkflowTemplateType']/attribute[@name='requireCompleteConfirmation']" />
      </plm:SchemaChange>
    </xsd:documentation>
    <xsd:documentation>
    
    PLM XML PDM Schema extension
                        
    </xsd:documentation>
    <xsd:appinfo source="http://www.plmxml.org/Schemas/PLMXMLPDMSchema">
      <plm:SchemaInfo name="PLMXMLPDMSchema.xsd" date="2008-05-02" version="6.0" status="release"/>
    </xsd:appinfo>
  </xsd:annotation>
  <!-- -->
  <!-- ********************** Decision ********************************* -->
  <!-- -->
  <xsd:simpleType name="DecisionType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="noDecision"/>
      <xsd:enumeration value="approve"/>
      <xsd:enumeration value="reject"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <!-- ********************** Signoff ********************************** -->
  <!-- -->
  <xsd:simpleType name="SignoffRequiredEnum">
    <xsd:annotation>
      <xsd:documentation>
      Whether a signoff is optional or required. If it is required by a workflow
      process, a user might or might not be allowed to modify it to optional.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="optional" />
      <xsd:enumeration value="requiredModifiable" />
      <xsd:enumeration value="requiredUnmodifiable" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="SignoffType">
    <xsd:annotation>
      <xsd:documentation>
      Attributes:

      organisationMemberRef: References an OrganisationMember if the workflow
                        task is assigned to an organisation member.
      resourcePoolRef:  References a ResourcePool if the workflow task is
                        assigned to a resource pool.
      decision:         approve, noDecision or reject.
      decisionDate:     The date and time the decision was made.
      userRef:          References the actual signing off User.
      signoffRequired:  Whether the Signoff is optional or required. If it is
                        required by a workflow process, the user might or might
                        not be allowed to modify it to optional.
      activeSurrogateRef: References an OrganisationMember who can deputise for
                        the assignee.
      assignerRef:      References the User who does the assigning.

      Sub-elements:

      Attribute:        Any element derived from AttributeBase.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:DescriptionBase">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="plm:Attribute" />
        </xsd:choice>
        <xsd:attribute name="organisationMemberRef" type="plm:anyURIType" plm:refType="plm:OrganisationMember"/>
        <xsd:attribute name="resourcePoolRef" type="plm:anyURIType" plm:refType="plm:ResourcePool"/>
        <xsd:attribute name="decision" type="plm:DecisionType"/>
        <xsd:attribute name="decisionDate" type="xsd:dateTime" use="optional"/>
        <xsd:attribute name="userRef" type="plm:anyURIType" plm:refType="plm:User"/>
        <xsd:attribute name="signoffRequired" type="plm:SignoffRequiredEnum" default="optional" />
        <xsd:attribute name="activeSurrogateRef" type="plm:anyURIType" plm:refType="plm:OrganisationMember" />
        <xsd:attribute name="assignerRef" type="plm:anyURIType" plm:refType="plm:User" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- -->
  <!-- **************************** Task ******************************** -->
  <!-- -->
  <xsd:simpleType name="TaskStateType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="unassigned"/>
      <xsd:enumeration value="pending"/>
      <xsd:enumeration value="started"/>
      <xsd:enumeration value="completed"/>
      <xsd:enumeration value="skipped"/>
      <xsd:enumeration value="aborted"/>
      <xsd:enumeration value="suspended"/>
      <xsd:enumeration value="failed"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="TaskType">
    <xsd:annotation>
      <xsd:documentation>
      Attributes:

      state:            The state of the workflow task.
      subTaskRefs:      References any dependent sub-tasks.
      targetRefs:       References the WorkflowProcess and the items that are
                        the subject of the workflow process.
      referenceRefs:    References the WorkflowProcess and any reference items.
      responsiblePartyRef: References the OrganisationMember, User or
                        ResourcePool to whom the workflow task is assigned.
      activeSurrogateRef: References an OrganisationMember or User who can
                        deputise for the responsible party.
      assignerRef:      References the User who does the assigning.
      userRef:          References the actual signing off User.

      Sub-elements:

      Signoff:          The signoff of the workflow task.
      ReleaseStatus:    The release status of the workflow task.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:sequence>
          <xsd:element name="Signoff" type="plm:SignoffType" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="ReleaseStatus" type="plm:ReleaseStatusType" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="state" type="plm:TaskStateType"/>
        <xsd:attribute name="subTaskRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:Task"/>
        <xsd:attribute name="targetRefs" use="optional">
          <xsd:simpleType>
            <xsd:restriction base="plm:uriReferenceListType">
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="referenceRefs" use="optional">
          <xsd:simpleType>
            <xsd:restriction base="plm:uriReferenceListType">
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="responsiblePartyRef" type="plm:anyURIType" plm:refType="plm:Owner plm:ResourcePool" />
        <xsd:attribute name="activeSurrogateRef" type="plm:anyURIType" plm:refType="plm:Owner" />
        <xsd:attribute name="assignerRef" type="plm:anyURIType" plm:refType="plm:User" />
        <xsd:attribute name="userRef" type="plm:anyURIType" plm:refType="plm:User" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- -->
  <!-- ********************** WorkflowProcess ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowProcessType">
    <xsd:annotation>
      <xsd:documentation>
      Attributes:

      templateNameRef:  References a multiple language version of templateName.
                        If multiple language support is required,
                        templateNameRef should be used in addition to
                        templateName.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:sequence>
          <xsd:element name="Task" type="plm:TaskType" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="templateName" type="xsd:string"/>
        <xsd:attribute name="ownerRef" type="plm:anyURIType" plm:refType="plm:Owner"/>
        <xsd:attribute name="templateNameRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowProcess" type="plm:WorkflowProcessType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** Change ************************************ -->
  <!-- -->
  <xsd:complexType name="RelatedItemType">
    <xsd:annotation>
      <xsd:documentation>
      Attributes:

      typeRef:          References a multiple language version of type. If
                        multiple language support is required, typeRef should be
                        used in addition to type.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="itemRef" type="plm:anyURIType"/>
    <xsd:attribute name="type" type="xsd:string"/>
    <xsd:attribute name="typeRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
  </xsd:complexType>
  <!-- -->
  <xsd:complexType name="ChangeType">
    <xsd:annotation>
      <xsd:documentation>
      This element represents an Engineering Change. Each Change has a number of
      related objects, with relation type such as Affected, Problem, or
      Reference.

      Attributes:

      type:
      changeId:         change id
      changeRevisionId: revision string, e.g. "B"
      ownerRef:
      typeRef:          References a multiple language version of type. If
                        multiple language support is required, typeRef should be
                        used in addition to type.

      Sub-elements:

      RelatedItem:      related elements
      ReleaseStatus:
      ChangeRecord:     records of adds, deletions and other changes
      ChangeRecordGroup:
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:sequence>
          <xsd:element name="RelatedItem" type="plm:RelatedItemType" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="ReleaseStatus" type="plm:ReleaseStatusType" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="ChangeRecord" type="plm:ChangeRecordType" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="ChangeRecordGroup" type="plm:ChangeRecordGroupType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="type" type="xsd:string"/>
        <xsd:attribute name="changeId" type="xsd:string"/>
        <xsd:attribute name="changeRevisionId" type="xsd:string"/>
        <xsd:attribute name="ownerRef" type="plm:anyURIType"/>
        <xsd:attribute name="typeRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Change" type="plm:ChangeType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** WorkflowTemplateClassificationEnum ************************ -->
  <!-- -->
  <xsd:simpleType name="WorkflowTemplateClassificationEnum">
    <xsd:annotation>
      <xsd:documentation>
      Workflow template classification's enumeration values. There are two kinds of templates:
      process template and task template. 
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="process"/>
      <xsd:enumeration value="task"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <!-- ********************** WorkflowTemplateStageEnum ************************ -->
  <!-- -->
  <xsd:simpleType name="WorkflowTemplateStageEnum">
    <xsd:annotation>
      <xsd:documentation>
      Workflow template's stage enumeration values. A template could be in a stage as being 
      available for use, or being under construction, or being obsoleted.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="obsolete"/>
      <xsd:enumeration value="developing"/>
      <xsd:enumeration value="available"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <!-- ********************** WorkflowTemplateUndecidedReviewersEnum ******* -->
  <!-- -->
  <xsd:simpleType name="WorkflowTemplateUndecidedReviewersEnum">
    <xsd:annotation>
      <xsd:documentation>
      Whether the workflow process should wait for undecided reviewers.
      Currently only the values true and false are supported.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="true"/>
      <xsd:enumeration value="false"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <!-- ********************** WorkflowTemplate ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowTemplateType">
    <xsd:annotation>
      <xsd:documentation>
      The WorkflowTemplateType represents the type for the workflow templates.
      Typically workflow template is used to initialize workflow processes. A
      workflow template have actions associated with it to represent a list of
      workflow actions that will be triggered during a workflow process. The
      actions objects are WorkflowAction objects. A workflow template also might
      have a parent task template, one or more dependency task templates, and
      one or more child task templates associated with it. These are also
      WorkflowTemplate objects.

      Attributes:

      locationRef:      References a multiple language version of location. If
                        multiple language support is required, locationRef
                        should be used in addition to location.
      objectTypeRef:    References a multiple language version of objectType. If
                        multiple language support is required, objectTypeRef
                        should be used in addition to objectType.
      waitForUndecidedReviewers: Whether the workflow process should wait for
                        undecided reviewers.
      originalId:       An identifer for the original WorkflowTemplate to allow
                        traceability to the original WorkflowTemplate, even
                        after it has been deleted.
      asynchronous:     Whether the WorkflowTemplate may be processed
                        asynchronously.
      filterCondition:  The name of the filter condition.
      decisionSet:      The name of the decision set.
      storeParticipantsOnWorkflowProcess: Whether the assigned Participants are
                        stored on the workflow process or on the target
                        elements.
      requireCompleteConfirmation: Whether confirmation of completion is
                        required.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:sequence>
          <xsd:element name="TaskDescription" type="plm:UserListDataType"/>
          <xsd:element name="DependencyTaskActions" type="xsd:string" minOccurs="0" plm:deprecated="true"/>
          <xsd:element name="DependencyTaskTemplates" type="xsd:string" minOccurs="0" plm:deprecated="true"/>
        </xsd:sequence>
        <xsd:attribute name="actions" type="plm:uriReferenceListType" plm:refType="plm:WorkflowAction">
          <xsd:annotation>
            <xsd:appinfo source="http://www.plmxml.org/tools/CodeGenerator">validate=skipName</xsd:appinfo>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="parentTaskTemplateRef" type="plm:anyURIType" plm:refType="plm:WorkflowTemplate"/>
        <xsd:attribute name="dependencyTaskTemplateRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:WorkflowTemplate"/>
        <xsd:attribute name="iconKey" type="xsd:string"/>
        <xsd:attribute name="signoffQuorum" type="xsd:integer" use="optional"/>
        <xsd:attribute name="stage" type="plm:WorkflowTemplateStageEnum" default="available"/>
        <xsd:attribute name="templateClassification" type="plm:WorkflowTemplateClassificationEnum" default="task"/>
        <xsd:attribute name="location" type="xsd:string" use="required"/>
        <xsd:attribute name="objectType" type="xsd:string" use="required"/>
        <xsd:attribute name="showInProcessStage" type="xsd:boolean" use="required"/>
        <xsd:attribute name="subTemplateRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:WorkflowTemplate"/>
        <xsd:attribute name="locationRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
        <xsd:attribute name="objectTypeRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
        <xsd:attribute name="waitForUndecidedReviewers" type="plm:WorkflowTemplateUndecidedReviewersEnum" default="false"/>
        <xsd:attribute name="originalId" type="xsd:string" use="optional"/>
        <xsd:attribute name="asynchronous" type="xsd:boolean" default="false"/>
        <xsd:attribute name="filterCondition" type="xsd:string" use="optional"/>
        <xsd:attribute name="decisionSet" type="xsd:string" use="optional"/>
        <xsd:attribute name="storeParticipantsOnWorkflowProcess" type="xsd:boolean" default="false" />
        <xsd:attribute name="requireCompleteConfirmation" type="xsd:boolean" default="false" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowTemplate" type="plm:WorkflowTemplateType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** WorkflowAction ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowActionType">
    <xsd:annotation>
      <xsd:documentation>
      Each WorkflowAction object has one or more action handlers and business rules associated
      with it. The action handlers are represented by a list WorkflowHandlers, while the business
      rules are represented WorkflowBusinessRules. The WorkflowAction object also has a back pointer
      to its parent task template.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="actionHandlerRefs" type="plm:uriReferenceListType" plm:refType="plm:WorkflowHandler"/>
        <xsd:attribute name="ruleRefs" type="plm:uriReferenceListType" plm:refType="plm:WorkflowBusinessRule"/>
        <xsd:attribute name="actionType" type="xsd:string" use="required"/>
        <xsd:attribute name="parentRef" type="plm:anyURIType" use="required" plm:refType="plm:WorkflowTemplate"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowAction" type="plm:WorkflowActionType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** WorkflowHandler ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowHandlerType">
    <xsd:annotation>
      <xsd:documentation>
      A WorkflowHandler is a small program or function. Handlers are used to 
      extend and customize workflow tasks. A WorkflowHandler object has one or more 
      arguments associated with it.  It also has a back pointer to its parent workflow
      action object.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:sequence>
          <xsd:element name="Arguments" type="plm:UserDataType" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="parentRef" type="plm:anyURIType" plm:refType="plm:WorkflowAction"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowHandler" type="plm:WorkflowHandlerType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** WorkflowBusinessRuleHandler ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowBusinessRuleHandlerType">
    <xsd:complexContent>
      <xsd:extension base="plm:WorkflowHandlerType">
        <xsd:attribute name="override" type="xsd:boolean" default="false"/>
        <xsd:attribute name="negated" type="xsd:boolean" default="false"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowBusinessRuleHandler" type="plm:WorkflowBusinessRuleHandlerType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** WorkflowBusinessRule ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowBusinessRuleType">
    <xsd:annotation>
      <xsd:documentation>
      A WorkflowBusinessRule represents some conditions that must be met to perform a workflow
      action. It consists of one or more WorkflowBusinessRuleHandlers, and a rule quorum 
      specifying the number of rule handlers that must return go for the workflow action to 
      complete. It also has a back pointer to its parent workflow action object.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="ruleHandlerRefs" type="plm:uriReferenceListType" plm:refType="plm:WorkflowBusinessRuleHandler"/>
        <xsd:attribute name="ruleQuorum" type="xsd:integer" use="required"/>
        <xsd:attribute name="parentRef" type="plm:anyURIType" plm:refType="plm:WorkflowAction"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowBusinessRule" type="plm:WorkflowBusinessRuleType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** WorkflowSignoffProfile ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowSignoffProfileType">
    <xsd:annotation>
      <xsd:documentation>
      A WorkflowSignoffProfile is used in a workflow review task template to define which a 
      user will comply with to assign review responsibilities to other Users. A signoff profile
      consists of a group and a role for a user, while the group object should be of type 
      plm:OrganisationType, and the role object should be of type plm:RoleType. The signoff profile
      object also has a back pointer to its related task template.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="roleRef" type="plm:anyURIType" plm:refType="plm:Role"/>
        <xsd:attribute name="groupRef" type="plm:anyURIType" plm:refType="plm:Owner"/>
        <xsd:attribute name="allowSubgroups" type="xsd:boolean" use="required"/>
        <xsd:attribute name="numberOfSignoffs" type="xsd:integer" use="required"/>
        <xsd:attribute name="signoffQuorum" type="xsd:integer" use="required"/>
        <xsd:attribute name="templateRef" type="plm:anyURIType" plm:refType="plm:WorkflowTemplate"/>
        <xsd:attribute name="signoffRequired" type="xsd:boolean" default="false" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowSignoffProfile" type="plm:WorkflowSignoffProfileType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** WorkflowProfileRelation ****************************** -->
  <!-- -->
  <xsd:complexType name="WorkflowProfileRelationType">
    <xsd:annotation>
      <xsd:documentation>
      A base type for defining relations between workflow task template and signoff profile elements. 
      ownerRef is a reference to an owning object, such as a task template or a task. profileRefs is 
      a reference to one or many signoff profiles that this owner object is associated to.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="ownerRef" type="plm:anyURIType" use="required"/>
        <xsd:attribute name="profileRefs" type="plm:uriReferenceListType" use="required" plm:refType="plm:WorkflowSignoffProfile"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkflowProfileRelation" type="plm:WorkflowProfileRelationType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** RuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="RuleEntryBase" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
      Base type for Revision Rule Entries.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:DescriptionBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="RuleEntry" type="plm:RuleEntryBase"/>
  <!-- -->
  <!-- ********************** DateRuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="DateRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      Specifies a date to be used by other Rule Entries.
      
      Attributes:
      
      refDate:      the dateTime
      isToday:      if 'true', the dateTime is today (at 00.00 hours).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:attribute name="refDate" type="xsd:dateTime"/>
        <xsd:attribute name="isToday" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DateRuleEntry" type="plm:DateRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** StatusRuleEntry ************************* -->
  <!-- -->
  <xsd:simpleType name="StatusConfigType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="effectiveDate"/>
      <xsd:enumeration value="releasedDate"/>
      <xsd:enumeration value="serialNumber"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="StatusRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      A RevisionRule Entry for selecting a Revision by its Release Status. 

      Attributes:

      status:           This specifies the required release status of the
                        Revision. It corresponds to the 'name' attribute of the
                        corresponding ReleaseStatus element. If 'status' has the
                        value "any", then any status is acceptable.
      type:             specifies whether the rule is to use the release date,
                        the effectivity dates, or the serial number range, in
                        the ReleaseStatus, when choosing an element. May use the
                        date or serial number from a DateRuleEntry or a
                        SerialNumberRuleEntry.
      statusRef:        References a multiple language version of status. If
                        multiple language support is required, statusRef should
                        be used in addition to status.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:attribute name="status" type="xsd:string" use="optional"/>
        <xsd:attribute name="type" type="plm:StatusConfigType"/>
        <xsd:attribute name="statusRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="StatusRuleEntry" type="plm:StatusRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** LatestWorkingRuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="LatestWorkingRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      Latest Working Rule - select the most recent element with status Working
      (i.e. no ReleaseStatus).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="LatestWorkingRuleEntry" type="plm:LatestWorkingRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** WorkingRuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="WorkingRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      Working Rule Entry - i.e. no Release Status, selecting by user or group.
      
      Attributes:
      
      userRef:         reference to User
      groupRef:        
      
      isCurrentUser:   if 'true', then select by the current user
      isCurrentGroup:  if 'true', then select by the current group.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:attribute name="userRef" type="plm:anyURIType" plm:refType="plm:Owner"/>
        <xsd:attribute name="groupRef" type="plm:anyURIType" plm:refType="plm:Owner"/>
        <xsd:attribute name="isCurrentUser" type="xsd:boolean"/>
        <xsd:attribute name="isCurrentGroup" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="WorkingRuleEntry" type="plm:WorkingRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** LatestRuleEntry ************************* -->
  <!-- -->
  <xsd:simpleType name="RevisionConfigType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="creationDate"/>
      <xsd:enumeration value="alphaNumericRevID"/>
      <xsd:enumeration value="numericRevID"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="LatestRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      Latest Rule Entry - i.e. most recent by creation date, numeric productId, 
      or alphanumeric productId.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:attribute name="configType" type="plm:RevisionConfigType"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="LatestRuleEntry" type="plm:LatestRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** OverrideRuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="OverrideRuleEntryType">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:attribute name="overrideFolderRef" type="plm:anyURIType" plm:refType="plm:Folder"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="OverrideRuleEntry" type="plm:OverrideRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** PreciseRuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="PreciseRuleEntryType">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PreciseRuleEntry" type="plm:PreciseRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** SerialNumberRuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="SerialNumberRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      Specifies a Serial Number to be used by other Rule Entries.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:attribute name="serialNumber" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SerialNumberRuleEntry" type="plm:SerialNumberRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** ContextRuleEntry ******************** -->
  <!-- -->
  <xsd:complexType name="ContextRuleEntryType">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:attribute name="contextRef" type="plm:anyURIType"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ContextRuleEntry" type="plm:ContextRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** GroupRuleEntry ************************* -->
  <!-- -->
  <xsd:complexType name="GroupRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      This RuleEntry contains subordinate RuleEntries, which are of equal precedence.
      They are all processed; if there is at least one match, then the revision with the
      most recent creation date is configured.
      
      SubElements:
      
      RuleEntry:        Each sub-element is a subordinate RuleEntry. 
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:sequence>
          <xsd:element ref="plm:RuleEntry" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GroupRuleEntry" type="plm:GroupRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** GroupByTypeRuleEntry ************************* -->
  <!-- -->
  <xsd:simpleType name="GroupTypeEnum">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="structure" />
      <xsd:enumeration value="occurrence" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="GroupByTypeRuleEntryType">
    <xsd:annotation>
      <xsd:documentation>
      This RuleEntry contains subordinate RuleEntries, and only applies to
      Structures or Occurrences with 'subType' attribute corresponding to one of
      a specified set of allowed types. The RuleEntry sub-elements are processed
      sequentially.

      Attributes:

      groupType:        The type of elements to which the GroupByTypeRuleEntry
                        applies.

      SubElements:

      AllowedType:      Each sub-element specifies an allowed 'subType'
      RuleEntry:        Each sub-element is a subordinate RuleEntry. Note that these
                        subordinate RuleEntries cannot be of type GroupByTypeRuleEntry.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RuleEntryBase">
        <xsd:sequence>
          <xsd:element name="AllowedType" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element ref="plm:RuleEntry" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="groupType" type="plm:GroupTypeEnum" default="structure" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GroupByTypeRuleEntry" type="plm:GroupByTypeRuleEntryType" substitutionGroup="plm:RuleEntry"/>
  <!-- -->
  <!-- ********************** RevisionRule ************************* -->
  <!-- -->
  <xsd:complexType name="RevisionRuleType">
    <xsd:annotation>
      <xsd:documentation>
      A Revision Rule is a rule specifying which Revisions of Structures should be
      configured.
      
      Sub-elements:
      
      RuleEntry:    the clauses (entries) in the Rule. They are applied sequentially.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ConfigRuleBase">
        <xsd:sequence>
          <xsd:element ref="plm:RuleEntry" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="RevisionRule" type="plm:RevisionRuleType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** Form ************************* -->
  <!-- -->
  <xsd:complexType name="FormType">
    <xsd:annotation>
      <xsd:documentation>
      A Form is a way of associating additional freeform attributes with an element,
      effectively defining a subclass of element. (The subclass can be specified by
      means of the "subType" attribute on the element).
      
      The attributes are attached to the Form by using UserData. The Form is attached 
      to the element by means of an AssociatedForm element.
   
      Attributes:
      
      mainClass:          
      subClass:          
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="mainClass" type="xsd:string" use="optional"/>
        <xsd:attribute name="subClass" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Form" type="plm:FormType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ********************** Folder ************************* -->
  <!-- -->
  <xsd:complexType name="FolderType">
    <xsd:annotation>
      <xsd:documentation>
        A Folder is a general-purpose collection of other elements.
      
        Attributes:
      
        subType:        Inherited from ManagedBase. A string representing the sub-type of the Folder. The
                        string, "viewSet", is reserved for a set of Model Views in NX.
        folderContentRefs: The contents of the Folder. When the subType attribute is set to "viewSet",
                        folderContentsRefs references a list of ProductViews with their usage attributes
                        set to "modelView". The first reference in the list references the Base View.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="folderContentRefs" type="plm:uriReferenceListType"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Folder" type="plm:FolderType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ************************* AssociatedFolder ************************ -->
  <!-- -->
  <xsd:complexType name="AssociatedFolderType">
    <xsd:annotation>
      <xsd:documentation>
      plm:Attribute used to associate a Folder with a PLM XML element.

      Attributes:

      folderRef     reference to the Folder
      role          role/purpose of Folder.

      Sub-elements:

      UserData:         Represents user-definable properties on the
                        relationship.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="plm:UserData"/>
        </xsd:choice>
        <xsd:attribute name="folderRef" type="plm:anyURIType" use="required" plm:refType="plm:Folder"/>
        <xsd:attribute name="role" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AssociatedFolder" type="plm:AssociatedFolderType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ************************* AssociatedForm ********************************** -->
  <!-- -->
  <xsd:complexType name="AssociatedFormType">
    <xsd:annotation>
      <xsd:documentation>
      plm:Attribute used to associate a Form with a PLM XML element.

      Attributes:

      formRef      reference to the Form
      role         role/purpose of Form.    

      Sub-elements:

      UserData:         Represents user-definable properties on the
                        relationship.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="plm:UserData"/>
        </xsd:choice>
        <xsd:attribute name="formRef" type="plm:anyURIType" use="required" plm:refType="plm:Form"/>
        <xsd:attribute name="role" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AssociatedForm" type="plm:AssociatedFormType" substitutionGroup="plm:Attribute"/>
  <!-- -->
  <!-- ********************** IdContext ************************* -->
  <!-- -->
  <xsd:complexType name="IdContextType">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="IdContext" type="plm:IdContextType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ********************** Identifier ************************* -->
  <!-- -->
  <xsd:complexType name="IdentifierType">
    <xsd:annotation>
      <xsd:documentation>
      This defines an alternative id for an element, in some context.

      Attributes:

      identifierId:     the alternative id.
      idContext:        a context string
      supplementalContext: a list of context elements, such as Organisations
      alternativeIdOf:  a list of elements that this is an id of
      isDispDefault:    true if this is the id to display by default when
                        displaying the identified element.
      idContextRef:     References a multiple language version of idContext. If
                        multiple language support is required, idContextRef
                        should be used in addition to idContext.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="identifierId" type="xsd:string" use="required"/>
        <xsd:attribute name="idContext" type="xsd:string" use="optional"/>
        <xsd:attribute name="supplementalContext" type="plm:uriReferenceListType" use="optional">
          <xsd:annotation>
            <xsd:appinfo source="http://www.plmxml.org/tools/CodeGenerator">validate=skipName</xsd:appinfo>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="alternateIdOf" type="plm:uriReferenceListType">
          <xsd:annotation>
            <xsd:appinfo source="http://www.plmxml.org/tools/CodeGenerator">validate=skipName</xsd:appinfo>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="isDispDefault" type="xsd:boolean"/>
        <xsd:attribute name="idContextRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Identifier" type="plm:IdentifierType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ********************** Project ************************* -->
  <!-- -->
  <xsd:complexType name="ProjectType">
    <xsd:annotation>
      <xsd:documentation>
      Identifies a group of people or organizations, such as project teams,
      development teams, suppliers or customers, for a particular piece of work.

      Attributes:

      projectId:        The identifier for the project.
      team:             A list of references to the OrganisationMember or
                        Organisation elements that constitute the project team.
      active:           Whether the Project is active.
      visible:          When active is false, visible determines whether the
                        Project remains visible.
      useProjectSecurity: Whether an OrganisationMember or Organisation can gain
                        access to an element by virtue of its membership of the
                        Project.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="projectId" type="xsd:string" use="required"/>
        <xsd:attribute name="team" type="plm:uriReferenceListType" plm:refType="plm:Owner">
          <xsd:annotation>
            <xsd:appinfo source="http://www.plmxml.org/tools/CodeGenerator">validate=skipName</xsd:appinfo>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="active" type="xsd:boolean" default="true"/>
        <xsd:attribute name="visible" type="xsd:boolean" default="true"/>
        <xsd:attribute name="useProjectSecurity" type="xsd:boolean" default="false"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Project" type="plm:ProjectType" substitutionGroup="plm:Managed"/>
  <!--  -->
  <!-- ************************* Vault ********************* -->
  <!-- -->
  <xsd:simpleType name="MachineTypesType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="unix"/>
      <xsd:enumeration value="vms"/>
      <xsd:enumeration value="wnt"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="VaultType">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="nodeName" type="xsd:string"/>
        <xsd:attribute name="machineType" type="plm:MachineTypesType"/>
        <xsd:attribute name="path" type="xsd:string"/>
        <xsd:attribute name="shadowNodeName" type="xsd:string" use="optional"/>
        <xsd:attribute name="shadowMachineType" type="plm:MachineTypesType" use="optional"/>
        <xsd:attribute name="shadowPath" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Vault" type="plm:VaultType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************* ClosureRule ******************************* -->
  <!-- -->
  <xsd:complexType name="ClosureRuleClauseType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>
  <!-- -->
  <xsd:simpleType name="ClosureRuleScopeType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="TCENG" plm:deprecated="true"/>
      <xsd:enumeration value="PLMXML"/>
      <xsd:enumeration value="application"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="ClosureRuleType">
    <xsd:annotation>
      <xsd:documentation>
      ClosureRule is used to define what type of associated data gets exported. It consists
      of a sequence of clauses, each one defining a primary class, a secondary class,
      a relation, and an action. It is used to drive a traversal process.

      Attributes:

      scope:       PLMXML or application
      searchCriteriaRef: References a 4GD Search Criteria.

      Sub-Elements:

      Clause:      Closure rule clause in string form, e.g.
                   "CLASS.*:CLASS.*:ATTRIBUTE.*:TRAVERSE_AND_PROCESS"
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ConfigRuleBase">
        <xsd:sequence>
          <xsd:element name="Clause" type="plm:ClosureRuleClauseType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="scope" type="plm:ClosureRuleScopeType"/>
        <xsd:attribute name="searchCriteriaRef" type="plm:anyURIType" plm:refType="plm:OccurrenceFilter"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ClosureRule" type="plm:ClosureRuleType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************* ConfigurationRule *********************** -->
  <!-- -->
  <xsd:complexType name="ConfigurationRuleType">
    <xsd:annotation>
      <xsd:documentation>
      This element defines a configuration rule by referencing closure rule, 
      variant rule and revision rule.
      
      Attributes:
      
      closureRuleRef:    reference to a ClosureRule
      variantRuleRef:    reference to a VariantRule
      revisionRuleRef:   reference to a RevisionRule
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="closureRuleRef" type="plm:anyURIType" plm:refType="plm:ClosureRule"/>
        <xsd:attribute name="variantRuleRef" type="plm:anyURIType" plm:refType="plm:VariantRule"/>
        <xsd:attribute name="revisionRuleRef" type="plm:anyURIType" plm:refType="plm:RevisionRule"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ConfigurationRule" type="plm:ConfigurationRuleType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************* StructureContext ******************** -->
  <!-- -->
  <xsd:complexType name="StructureContextType">
    <xsd:annotation>
      <xsd:documentation>
      StructureContext is used to group together all the objects that the user 
      would like to treat as a project for analysis.
      
      Attributes:
      
      configurationRuleRef: configurationRule for this element.
      
      structureRefs:             
      structureRevisionRefs:           
      occurrenceRefs:             
      managedRefs:            
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="configurationRuleRef" type="plm:anyURIType" plm:refType="plm:ConfigurationRule"/>
        <xsd:attribute name="structureRefs" type="plm:uriReferenceListType" plm:refType="plm:Structure"/>
        <xsd:attribute name="structureRevisionRefs" type="plm:uriReferenceListType" plm:refType="plm:StructureRevision"/>
        <xsd:attribute name="managedRefs" type="plm:uriReferenceListType" plm:refType="plm:Managed"/>
        <xsd:attribute name="occurrenceRefs" type="plm:uriReferenceListType" plm:refType="plm:Occurrence"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="StructureContext" type="plm:StructureContextType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ************************* CollaborationContext *************************** -->
  <!-- -->
  <xsd:complexType name="CollaborationContextType">
    <xsd:annotation>
      <xsd:documentation>
      CollaborationContext is used to group together several StructureContext elements,
      and a default configuration rule.
        
      Attributes:
    
      currentContextRef:    The current StructureContext.
      configurationRuleRef: configuration rule for this element.
      structureContextRefs: References to StructureContextRefs.
      managedRefs:          references to attachments.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="currentContextRef" type="plm:anyURIType" plm:refType="plm:StructureContext"/>
        <xsd:attribute name="configurationRuleRef" type="plm:anyURIType" plm:refType="plm:ConfigurationRule"/>
        <xsd:attribute name="structureContextRefs" type="plm:uriReferenceListType" plm:refType="plm:StructureContext"/>
        <xsd:attribute name="managedRefs" type="plm:uriReferenceListType" plm:refType="plm:Managed"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CollaborationContext" type="plm:CollaborationContextType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ******************************* ValidationResults ****************** -->
  <!-- -->
  <xsd:complexType name="ValidationCheckerType" plm:deprecated="true">
    <xsd:annotation>
      <xsd:documentation>
      This element gives the result of a Validation Check performed on an
      object.

      Attributes:

      name:             name of the check
      result:           true if check passed, false if failed
      status:           an integer return code from the check
      comments:         a comment string
      adHoc:            true if the validation is ad-hoc.
      reportRef:        URI of the validation report file.
      nameRef:          References a multiple language version of name. If
                        multiple language support is required, nameRef should be
                        used in addition to name.
      commentsRef:      References a multiple language version of comments. If
                        multiple language support is required, commentsRef
                        should be used in addition to comments.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="result" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="status" type="xsd:integer" use="optional"/>
    <xsd:attribute name="comments" type="xsd:string" use="optional"/>
    <xsd:attribute name="adHoc" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="reportRef" type="plm:anyURIType" use="optional"/>
    <xsd:attribute name="nameRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
    <xsd:attribute name="commentsRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
  </xsd:complexType>
  <!-- -->
  <xsd:complexType name="ValidationResultsType" plm:deprecated="true">
    <xsd:annotation>
      <xsd:documentation>
      This element, derived from plm:Attribute, is used to give the results of applying
      a validation check to its parent element.

      Attributes:

      application:      the validating application

      Sub-elements:

      Checker:          the name and result of each check performed
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:sequence>
          <xsd:element name="Checker" type="plm:ValidationCheckerType" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="application" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationResults" type="plm:ValidationResultsType" substitutionGroup="plm:Attribute" plm:deprecated="true"/>
  <!-- -->
  <!-- ********************** ChangeRecord **************************** -->
  <!-- -->
  <xsd:complexType name="ChangeRecordType">
    <xsd:annotation>
      <xsd:documentation>
      This element describes a change in terms of one or two Instances.
        
      Attributes:
      
      originalRef:      the original Instance, if any.
      modifiedRef:      the modified Instance, if any.
      
      select:           If both Instances are present, the 'select' attribute can be used to 
                        specify what attribute or sub-element of the Instance has changed, by
                        using an XPATH syntax (for example, "@quantity", or "Transform").

      derived:          true if the ChangeRecord exists as a result of an addition of a
                        higher-level structure.
      
      parentRef:        The parent StructureRevisionView of the 'Modified' Instance,
                        unless 'derived' is true, in which case it is the 
                        higher-level StructureRevisionView from which this ChangeRecord
                        is derived.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="originalRef" type="plm:anyURIType" use="optional" plm:refType="plm:Instance"/>
        <xsd:attribute name="modifiedRef" type="plm:anyURIType" use="optional" plm:refType="plm:Instance"/>
        <xsd:attribute name="select" type="xsd:string" use="optional"/>
        <xsd:attribute name="derived" type="xsd:boolean" use="optional"/>
        <xsd:attribute name="parentRef" type="plm:anyURIType" use="optional" plm:refType="plm:StructureRevisionView"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ChangeRecord" type="plm:ChangeRecordType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ********************** ChangeRecordGroup ********************************* -->
  <!-- -->
  <xsd:complexType name="ChangeRecordGroupType">
    <xsd:annotation>
      <xsd:documentation>
      This element defines a group of ChangeRecords which together define a logical or
      functional replacement.
        
      Attributes:
      
      transfer:           true if the ChangeRecordGroup is the result of transferring the same 
                          component from one assembly to another.
      modifiedRootRef:    The StructureRevisionView which is at the root of the Modified
                          assembly.
      memberRefs:         The ChangeRecord elements in the group.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="transfer" type="xsd:boolean" use="optional"/>
        <xsd:attribute name="modifiedRootRef" type="plm:anyURIType" use="optional" plm:refType="plm:StructureRevisionView"/>
        <xsd:attribute name="memberRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:ChangeRecord"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ChangeRecordGroup" type="plm:ChangeRecordGroupType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************* IncrementalChange ********************** -->
  <!-- -->
  <xsd:complexType name="IncrementalChangeType" plm:deprecated="true">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:DescriptionBase">
        <xsd:attribute name="associationRefs" type="plm:uriReferenceListType" plm:deprecated="true"/>
        <xsd:attribute name="datasetRefs" type="plm:uriReferenceListType" plm:deprecated="true"/>
        <xsd:attribute name="formRefs" type="plm:uriReferenceListType" plm:deprecated="true"/>
        <xsd:attribute name="folderRefs" type="plm:uriReferenceListType" plm:deprecated="true"/>
        <xsd:attribute name="instanceRefs" type="plm:uriReferenceListType" plm:deprecated="true"/>
        <xsd:attribute name="activityRefs" type="plm:uriReferenceListType" plm:deprecated="true"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- -->
  <!-- ************************* ChangeOrder *********************** -->
  <!-- -->
  <xsd:complexType name="ChangeOrderType">
    <xsd:annotation>
      <xsd:documentation/>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase">
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="IncrementalChangeAdd" type="plm:IncrementalChangeType" minOccurs="0" plm:deprecated="true"/>
          <xsd:element name="IncrementalChangeDelete" type="plm:IncrementalChangeType" minOccurs="0" plm:deprecated="true"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ChangeOrder" type="plm:ChangeOrderType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************ Vendor ************************************* -->
  <!-- -->
  <xsd:complexType name="VendorType">
    <xsd:annotation>
      <xsd:documentation>
      Represents a vendor.

      Attributes:

      addressRef:       References the Address that holds the address of the
                        vendor's premises and the vendor's web site address,
                        phone number and email address.
      contactRef:       References the Person that holds the name of the contact
                        at the vendor.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase">
        <xsd:attribute name="addressRef" type="plm:anyURIType" use="optional" plm:refType="plm:Address"/>
        <xsd:attribute name="contactRef" type="plm:anyURIType" use="optional" plm:refType="plm:Person"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Vendor" type="plm:VendorType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************ VendorRevision ***************************** -->
  <!-- -->
  <xsd:complexType name="VendorRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Represents a revision of a vendor.

      Attributes:

      vendorRoleRefs:   References a list of VendorRole elements that represent
                        the roles and associated information about the vendor
                        revision.
      comments:         General comments about the vendor revision.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="vendorRoleRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:VendorRole"/>
        <xsd:attribute name="comments" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="VendorRevision" type="plm:VendorRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************ VendorRole ********************************* -->
  <!-- -->
  <xsd:complexType name="VendorRoleType">
    <xsd:annotation>
      <xsd:documentation>
      Represents a role and associated information about a vendor revision.

      Attributes:

      type:             The type or role of the vendor revision.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="type" type="plm:OrganisationRoleEnum" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="VendorRole" type="plm:VendorRoleType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ VendorPartRelation ************************* -->
  <!-- -->
  <xsd:complexType name="VendorPartRelationType">
    <xsd:annotation>
      <xsd:documentation>
      Relates a commercial part to a vendor part.

      Attributes:

      preferredStatus:  Whether the Product representing the vendor part
                        referenced by the second reference in the inherited
                        relatedRefs attribute is the preferred solution for the
                        commercial part referenced by the first reference in
                        relatedRefs. preferredStatus can take values like
                        "preferred" or "backup". The preferred status of the
                        Vendor is indicated by the vendorRef attribute on the
                        Product representing the vendor part.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType">
        <xsd:attribute name="preferredStatus" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="VendorPartRelation" type="plm:VendorPartRelationType" substitutionGroup="plm:GeneralRelation"/>
  <!-- -->
  <!-- ************************ BidPackage ********************************* -->
  <!-- -->
  <xsd:complexType name="BidPackageType">
    <xsd:annotation>
      <xsd:documentation>
      Represents a bid package.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="BidPackage" type="plm:BidPackageType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************ LineItemConfigurationContext *************** -->
  <!-- -->
  <xsd:complexType name="LineItemConfigurationContextType">
    <xsd:annotation>
      <xsd:documentation>
      Represents configuration context for a line item.

      Attributes:

      viewRef:          References the View used to configure the line item.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ConfigurationContextType">
        <xsd:attribute name="viewRef" type="plm:anyURIType" use="optional" plm:refType="plm:View"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="LineItemConfigurationContext" type="plm:LineItemConfigurationContextType" substitutionGroup="plm:ConfigurationContext"/>
  <!-- -->
  <!-- ************************ LineItem *********************************** -->
  <!-- -->
  <xsd:complexType name="LineItemType">
    <xsd:annotation>
      <xsd:documentation>
      Represents an individual line item in a bid package revision.

      Attributes:

      productRef:       References the Product that represents the commercial
                        part for the line item.
      quantityRef:      References the ValueWithUnit that represents the
                        quantity of the line item.
      quoteRefs:        A list of references to the Quote elements for the line
                        item.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="productRef" type="plm:anyURIType" use="optional" plm:refType="plm:Product"/>
        <xsd:attribute name="quantityRef" type="plm:anyURIType" use="optional" plm:refType="plm:ValueWithUnit"/>
        <xsd:attribute name="quoteRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:Quote"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="LineItem" type="plm:LineItemType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ************************ BidPackageRevision ************************* -->
  <!-- -->
  <xsd:complexType name="BidPackageRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Represents a revision of a bid package.

      Attributes:

      requiredDate:     The required date of the bid package revision.
      purpose:          The purpose of the bid package revision.

      Sub-elements:

      LineItem:         The individual line items in the bid package revision.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element name="LineItem" type="plm:LineItemType"/>
        </xsd:choice>
        <xsd:attribute name="requiredDate" type="xsd:date" use="optional"/>
        <xsd:attribute name="purpose" type="xsd:string" use="optional"/>
      </xsd:extension>
      </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="BidPackageRevision" type="plm:BidPackageRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************ Quote ************************************** -->
  <!-- -->
  <xsd:complexType name="QuoteType">
    <xsd:annotation>
      <xsd:documentation>
      Represents an individual line item in a bid package revision.

      Attributes:

      vendorRef:        References the Vendor for the Quote.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:ManagedBase">
        <xsd:attribute name="vendorRef" type="plm:anyURIType" use="optional" plm:refType="plm:Vendor"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Quote" type="plm:QuoteType" substitutionGroup="plm:Managed"/>
  <!-- -->
  <!-- ************************ ValidationResult *************************** -->
  <!-- -->
  <xsd:complexType name="CheckerParameterType">
    <xsd:annotation>
      <xsd:documentation>
      This element gives the parameter of a Validation Checker performed on an
      object.

      Attributes:

      name:            Inherited from AttribOwner. The name of this parameter.
      value:           The value of the parameter.
      operator:        The operator to connect name and value.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
    <xsd:extension base="plm:AttribOwnerBase">
      <xsd:attribute name="value" type="xsd:string" use="optional"/>
      <xsd:attribute name="operator" type="plm:PropertyFilterOperationEnum" default="equal"/>
    </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CheckerParameter" type="plm:CheckerParameterType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <xsd:complexType name="ValidationResultType">
    <xsd:annotation>
      <xsd:documentation>
      This element gives the result of a Validation Check performed on an
      object.

      Attributes:

      name:             Inherited from AttribOwner. The name of this result.
      checker:          The name of the checker.
      application:      The application to execute validation.
      category:         The category of this checker
      utilityCommand:   The command of validation utility.
      arguments:        A group of arguments used to run the validation
                        application.
      resultID:         The ID of one ValidationResult object.
      result:           The result of a checker.
      upToDate:         True if result is up_to_date, false if out_of_date.
      adHoc:            Indicates if the checker is adhoc.
      executorRef:      A reference to the Person or User that ran the
                        ValidationResult.
      date:             The date validation performed.
      comments:         The comments of one ValidationResult object.
      userRef:          A reference to the Person or User that created the
                        ValidationResult.
      reportRefs:       An array of URIs of Dataset.
      targetRef:        URI of the target dataset or other element to which the
                        validation applies.
      parameterRefs:    A list of references to the CheckerParameters for the
                        checker.
      requirementRef:   A reference to the RequirementRevision that this
                        ValidationResult validates.
      commentsRef:      References a multiple language version of comments. If
                        multiple language support is required, commentsRef
                        should be used in addition to comments.
      overrideApprovalRef: References an OverrideApproval.
      checkRef:         References the ValidationCheckRevision used to generate
                        the ValidationResult.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="checker" type="xsd:string" use="optional"/>
        <xsd:attribute name="application" type="xsd:string" use="optional"/>
        <xsd:attribute name="category" type="xsd:string" use="optional"/>
        <xsd:attribute name="utilityCommand" type="xsd:string" use="required"/>
        <xsd:attribute name="arguments" type="xsd:string" use="optional"/>
        <xsd:attribute name="resultID" type="xsd:string" use="optional"/>
        <xsd:attribute name="result" type="xsd:boolean" default="false"/>
        <xsd:attribute name="upToDate" type = "xsd:boolean" use = "optional"/>
        <xsd:attribute name="adHoc" type="xsd:boolean" default="false"/>
        <xsd:attribute name="executorRef" type="plm:anyURIType" plm:refType="plm:Owner" use="optional"/>
        <xsd:attribute name="date" type="xsd:dateTime" use="required"/>
        <xsd:attribute name="comments" type="xsd:string" use="optional"/>
        <xsd:attribute name="userRef" type="plm:anyURIType" plm:refType="plm:Owner" use="optional"/>
        <xsd:attribute name="reportRefs" type="plm:uriReferenceListType" plm:refType="plm:DataSet" use="optional"/>
        <xsd:attribute name="targetRef" type="plm:anyURIType" use="required"/>
        <xsd:attribute name="parameterRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:CheckerParameter"/>
        <xsd:attribute name="requirementRef" type="plm:anyURIType" use="optional" plm:refType="plm:RequirementRevision"/>
        <xsd:attribute name="commentsRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
        <xsd:attribute name="overrideApprovalRef" type="plm:anyURIType" use="optional" plm:refType="plm:OverrideApproval"/>
        <xsd:attribute name="checkRef" type="plm:anyURIType" use="optional" plm:refType="plm:ValidationCheckRevision"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationResult" type="plm:ValidationResultType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- *********************** DesignRequirement *************************** -->
  <!-- -->
  <xsd:complexType name="DesignRequirementType">
    <xsd:annotation>
      <xsd:documentation>
      A requirement for design.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RequirementType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DesignRequirement" type="plm:DesignRequirementType" substitutionGroup="plm:Requirement"/>
  <!-- -->
  <!-- ************************ DesignRequirementRevision ****************** -->
  <!-- -->
  <xsd:complexType name="DesignRequirementRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      A revision of a requirement for design.
      
      Attributes:
      
      parameterRefs:    A list of to the ValidationParameters for the
                        validation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:RequirementRevisionType">
        <xsd:attribute name="parameterRefs" type="plm:uriReferenceListType" plm:refType="plm:ValidationParameter plm:ValidationExpression"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DesignRequirementRevision" type="plm:DesignRequirementRevisionType" substitutionGroup="plm:RequirementRevision"/>
  <!-- -->
  <!-- *********************** ValidationRequirement *********************** -->
  <!-- -->
  <xsd:complexType name="ValidationRequirementType">
    <xsd:annotation>
      <xsd:documentation>
      A requirement for validation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:DesignRequirementType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationRequirement" type="plm:ValidationRequirementType" substitutionGroup="plm:DesignRequirement"/>
  <!-- -->
  <!-- ************************ ValidationRequirementRevision ************** -->
  <!-- -->
  <xsd:complexType name="ValidationRequirementRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      A revision of a requirement for validation.
      
      Attributes:
      
      expressionRef:    References the ValidationExpression for the requirement.
      
      Sub-elements:
      
      Message:          The status of the validation. An InformMessage indicates
                        pass. An ErrorMessage indicates failure. A WarnMessage
                        indicates a warning. A CheckMessage indicates no
                        specific semantics.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:DesignRequirementRevisionType">
        <xsd:choice minOccurs="0">
          <xsd:element ref="plm:Message"/>
        </xsd:choice>
        <xsd:attribute name="expressionRef" type="plm:anyURIType" plm:refType="plm:ValidationExpression"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationRequirementRevision" type="plm:ValidationRequirementRevisionType" substitutionGroup="plm:DesignRequirementRevision"/>
  <!-- -->
  <!-- ************************ ValidationParameterType ******************** -->
  <!-- -->
  <xsd:complexType name="ValidationParameterType">
    <xsd:annotation>
      <xsd:documentation>
      A parameter for design or validation.

      Attributes:

      type:             The data type of the parameter.
      value:            The value of the parameter if appropriate.
      measure:          The physical quantity that the parameter represents if
                        appropriate.
      unitRef:          References the units of the physical quantity if
                        appropriate.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="type" type="plm:UserValueDataType" default="string"/>
        <xsd:attribute name="value" type="xsd:string" use="optional"/>
        <xsd:attribute name="measure" type="plm:MeasureEnum" use="optional"/>
        <xsd:attribute name="unitRef" type="plm:anyURIType" use="optional" plm:refType="plm:Unit"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationParameter" type="plm:ValidationParameterType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ ValidationExpressionType ******************* -->
  <!-- -->
  <xsd:complexType name="ValidationExpressionType">
    <xsd:annotation>
      <xsd:documentation>
      An expression for validation.

      Attributes:

      measure:          The physical quantity that the expression represents if
                        appropriate.
      unitRef:          References the units of the physical quantity if
                        appropriate.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralExpressionBase">
        <xsd:attribute name="measure" type="plm:MeasureEnum" use="optional"/>
        <xsd:attribute name="unitRef" type="plm:anyURIType" use="optional" plm:refType="plm:Unit"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationExpression" type="plm:ValidationExpressionType" substitutionGroup="plm:GeneralExpression"/>
  <!-- -->
  <!-- ************************ ParticipantEnum **************************** -->
  <!-- -->
  <xsd:simpleType name="ParticipantEnum">
    <xsd:annotation>
      <xsd:documentation>
      They represent types of workflow dynamic participants.
      proposedResponsibleParty is used by the WorkflowHandlers to determine who
      to assign tasks to. proposedReviewer is used to determine who should be
      added as reviewers and notifiers of tasks. The rest are in the CMII
      process from the Institute of Configuration Management.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="proposedResponsibleParty"/>
      <xsd:enumeration value="proposedReviewer"/>
      <xsd:enumeration value="changeAnalyst"/>
      <xsd:enumeration value="changeRequestor"/>
      <xsd:enumeration value="changeAdministrator1"/>
      <xsd:enumeration value="changeAdministrator2"/>
      <xsd:enumeration value="changeAdministrator3"/>
      <xsd:enumeration value="changeImplementationBoard"/>
      <xsd:enumeration value="changeReviewBoard"/>
      <xsd:enumeration value="userDefined"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <!-- ************************ Participant ******************************** -->
  <!-- -->
  <xsd:complexType name="ParticipantType">
    <xsd:annotation>
      <xsd:documentation>
      A workflow dynamic participant in the CMII process from the Institute of
      Configuration Management. It is used in workflow and change management.
      Other elements can be related to Participants via GeneralRelations with
      their subType attributes set to HasParticipant. WorkflowHandlers in
      WorkflowTemplates can be configured so that when a WorkflowProcess is
      initiated on the element, the related Participants are used.

      Attributes:

      type:             The type or role of the workflow dynamic participant.
                        When type is userDefined, the type or role is obtained
                        from userDefinedType.
      assigneeRef:      References an OrganisationMember or a ResourcePool.
      userDefinedType:  The type or role of a custom participant.
                        userDefinedType is ignored when type is not
                        userDefined.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="type" type="plm:ParticipantEnum" use="required"/>
        <xsd:attribute name="assigneeRef" type="plm:anyURIType" use="optional" plm:refType="plm:Owner plm:ResourcePool"/>
        <xsd:attribute name="userDefinedType" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Participant" type="plm:ParticipantType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ OverrideApproval *************************** -->
  <!-- -->
  <xsd:simpleType name="OverrideEnum">
    <xsd:restriction base="xsd:Name">
      <xsd:enumeration value="noOverride" />
      <xsd:enumeration value="temporary" />
      <xsd:enumeration value="permanent" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:simpleType name="OverrideStateEnum">
    <xsd:restriction base="xsd:Name">
      <xsd:enumeration value="pass" />
      <xsd:enumeration value="fail" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="OverrideApprovalType">
    <xsd:annotation>
      <xsd:documentation>
      Represents the approval override of a ValidationResult.

      Attributes:

      type:             The override type.
      state:            The state that the override should apply to.
      requestState:     The request state.
      category:         The override category.
      categoryRef:      References a multiple language version of category. If
                        multiple language support is required, categoryRef
                        should be used in addition to category.
      reason:           The brief override reason.
      reasonRef         References a multiple language version of reason. If
                        multiple language support is required, reasonRef should
                        be used in addition to reason.
      requestDate:      The override request date.
      requestUserRef:   References the override request user.
      decisionDate:     The decision date for the override request.
      decisionUserRef:  References the decision user for the override request.
      comment:          The decision comment for the override request.
      commentRef:       References a multiple language version of the decision
                        comment. If multiple language support is required,
                        commentRef should be used in addition to comment.
      descriptionTextRef: Inherited from AttribOwner. If multiple language
                        support is required, descriptionTextRef should be used
                        in addition to the Description sub-element.

      Sub-elements:

      Description:      Inherited from AttribOwner. The detailed description of
                        the override reason.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="type" type="plm:OverrideEnum" default="noOverride"/>
        <xsd:attribute name="state" type="plm:OverrideStateEnum" default="pass"/>
        <xsd:attribute name="requestState" type="plm:DecisionType" default="noDecision"/>
        <xsd:attribute name="category" type="xsd:string" use="optional"/>
        <xsd:attribute name="categoryRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text" />
        <xsd:attribute name="reason" type="xsd:string" use="optional"/>
        <xsd:attribute name="reasonRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text" />
        <xsd:attribute name="requestDate" type="xsd:dateTime" use="optional"/>
        <xsd:attribute name="requestUserRef" type="plm:anyURIType" plm:refType="plm:Owner" use="optional"/>
        <xsd:attribute name="decisionDate" type="xsd:dateTime" use="optional"/>
        <xsd:attribute name="decisionUserRef" type="plm:anyURIType" plm:refType="plm:Owner" use="optional"/>
        <xsd:attribute name="comment" type="xsd:string" use="optional" />
        <xsd:attribute name="commentRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="OverrideApproval" type="plm:OverrideApprovalType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ************************ ValidationCheck **************************** -->
  <!-- -->
  <xsd:complexType name="ValidationCheckType">
    <xsd:annotation>
      <xsd:documentation>
      Represents the definition of a validation check.

      Attributes:

      name:             Inherited from Structure.
      checkClass:       The class of the validation check.

      Sub-elements:

      Description:      Inherited from Structure.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase">
        <xsd:attribute name="checkClass" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationCheck" type="plm:ValidationCheckType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************ ValidationCheckRevision ******************** -->
  <!-- -->
  <xsd:complexType name="ValidationCheckRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Represents a revision of a ValidationCheck.

      Attributes:

      name:             Inherited from StructureRevision.
      parameterRefs:    A list of references to the CheckerParameters for the
                        validation check.
      isMandatory:      Whether the validation check is mandatory.
      canGroup:         Whether the validation check can group.
      category:         The category of the validation check.
      categoryRef:      References a multiple language version of category. If
                        multiple language support is required, categoryRef
                        should be used in addition to category.

      Sub-elements:

      Description:      Inherited from StructureRevision.
      AssociatedDataSet: Inherited from StructureRevision. The value of the role
                        attribute should be extensionRule.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="parameterRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:CheckerParameter"/>
        <xsd:attribute name="isMandatory" type="xsd:boolean" use="optional"/>
        <xsd:attribute name="canGroup" type="xsd:boolean" use="optional"/>
        <xsd:attribute name="category" type="xsd:string" use="optional"/>
        <xsd:attribute name="categoryRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationCheckRevision" type="plm:ValidationCheckRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************ ValidationAgent **************************** -->
  <!-- -->
  <xsd:complexType name="ValidationAgentType">
    <xsd:annotation>
      <xsd:documentation>
      Represents an agent that performs validation checks.

      Attributes:

      name:             Inherited from Structure.
      isClientUtility:  Whether the validation agent is a client utility.

      Sub-elements:

      Description:      Inherited from Structure.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase">
        <xsd:attribute name="isClientUtility" type="xsd:boolean" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationAgent" type="plm:ValidationAgentType" substitutionGroup="plm:Structure"/>
  <!-- -->
  <!-- ************************ ValidationAgentRevision ******************** -->
  <!-- -->
  <xsd:complexType name="ValidationAgentRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Represents a revision of a ValidationAgent.

      Attributes:

      keepOverriddenResult: Whether the overridden results of the validation
                        checks of an agent are kept when the checks are run. If
                        false, the results are updated when the checks are run.
      overrideReasonMandatory: Whether a user is required to enter a reason when
                        a result override is being requested.
      checkRefs:        A list of references to the validation checks that the
                        agent performs.
      arguments:        A group of arguments used to run the validation agent.
      closureRuleRef:   References the ClosureRule on which the validation agent
                        performs its checks.
      toolRef:          References the tool the validation agent uses to perform
                        its checks.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="keepOverriddenResult" type="xsd:boolean" default="false"/>
        <xsd:attribute name="overrideReasonMandatory" type="xsd:boolean" default="false"/>
        <xsd:attribute name="checkRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:ValidationCheck"/>
        <xsd:attribute name="arguments" type="xsd:string" use="optional"/>
        <xsd:attribute name="closureRuleRef" type="plm:anyURIType" use="optional"/>
        <xsd:attribute name="toolRef" type="plm:anyURIType" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ValidationAgentRevision" type="plm:ValidationAgentRevisionType" substitutionGroup="plm:StructureRevision"/>
  <!-- -->
  <!-- ************************ IssueReview ******************************** -->
  <!-- -->
  <xsd:simpleType name="IssueReviewDecisionEnum">
	  <xsd:restriction base="xsd:Name">
      <xsd:enumeration value="defer"/>
      <xsd:enumeration value="reject"/>
      <xsd:enumeration value="assign"/>
      <xsd:enumeration value="approveFix"/>
      <xsd:enumeration value="close"/>
      <xsd:enumeration value="reopen"/>
      <xsd:enumeration value="approveIssue"/>
      <xsd:enumeration value="noDecision"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="IssueReviewType">
	  <xsd:annotation>
      <xsd:documentation>
      Represents the review of an issue.

      Attributes:

      decision:         The decision of review.
      reviewerRef:      References the Person or User that reviewed the issue.
      comments:         The review comments.
      commentsRef:      References a multiple language version of comments. If
                        multiple language support is required, commentsRef
                        should be used in addition to comments.
      </xsd:documentation> 
    </xsd:annotation>
	  <xsd:complexContent>
	    <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="decision" type="plm:IssueReviewDecisionEnum" default="noDecision"/>
        <xsd:attribute name="reviewerRef" type="plm:anyURIType" use="optional" plm:refType="plm:Owner"/>
        <xsd:attribute name="comments" type="xsd:string" use="optional"/>
        <xsd:attribute name="commentsRef" type="plm:anyURIType" use="optional" plm:refType="plm:Text"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="IssueReview" type="plm:IssueReviewType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- AssignmentList -->
  <!-- -->
  <xsd:complexType name="AssignmentListType">
    <xsd:annotation>
      <xsd:documentation>
      Process assignment list is used to assign all tasks in a workflow process.
      Process assignment list is associated to a WorkflowTemplate and can be
      used to apply to processes created using that template. It can also be
      used to apply to any other template. If it is used to apply to processes
      that are created using different templates than it is defined for, it will
      try to assign the resources to the matching task templates and ignore the
      remaining.

      Attributes:

      name:             Inherited from AttribOwner. The name of the process
                        assignment list.
      taskTemplateRefs: A list of references to the task templates in a process
                        template.
      resourcesListRefs: A list of references to the resources assigned to the
                        task templates.
      shared:           Whether the process assignment list is shared.

      Sub-elements:

      Description:      Inherited from AttribOwner. The description of the
                        process assignment list.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
         <xsd:attribute name="taskTemplateRefs" type="plm:uriReferenceListType" use="required" plm:refType="plm:WorkflowTemplate"/>
         <xsd:attribute name="resourcesListRefs" type="plm:uriReferenceListType" use="required" plm:refType="plm:ResourceList"/> 
         <xsd:attribute name="shared" type="xsd:boolean" default="false"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AssignmentList" type="plm:AssignmentListType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- ResourceList -->
  <!-- -->
  <xsd:simpleType name="ResourceListActionEnum">
    <xsd:annotation>
      <xsd:documentation>
      Represents the actions the user is responsible for. Users assigned the
      review action will be the reviewers of the task. Users assigned the
      acknowledge action will acknowledge the task. Users assigned the notify
      action will receive notifications about the task. User assigned the
      perform action will be the responsible party for the task.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="perform"/>
      <xsd:enumeration value="review"/>
      <xsd:enumeration value="acknowledge"/>
      <xsd:enumeration value="notify"/>
      <xsd:enumeration value="reviewRequired"/>
      <xsd:enumeration value="acknowledgeRequired"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="ResourceListItemType">
    <xsd:annotation>
      <xsd:documentation>
      Attributes:

      action:           The action to be performed, like Review, Acknowledge,
                        Perform, Notify.                                                
      resourceRef:      References the user / group member / resource pool
                        element.
      profileRef:       Signoff profile, required for the task template.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttributeBase">
        <xsd:attribute name="action" type="plm:ResourceListActionEnum" use="required"/>
        <xsd:attribute name="resourceRef" type="plm:anyURIType" use="required" plm:refType="plm:Owner plm:ResourcePool"/> 
        <xsd:attribute name="profileRef" type="plm:anyURIType" use="optional" plm:refType="plm:WorkflowSignoffProfile"/>                 
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- -->
  <xsd:complexType name="ResourceListType">
    <xsd:annotation>
      <xsd:documentation>
      A ResourceList element is used to store the users / group members /
      resource pools assigned to a task template. It also stores the actions
      that the users / group members / resource pools are responsible for. If
      the task template has a defined profile, the profile information is also
      stored. If the task template is a review task template, we store the
      review quorum and if it is an acknowledge task template, we store the
      acknowledge quorum.

      Attributes:

      reviewQuorum:     The quorum value for a review task.
      acknowledgeQuorum: The quorum value for an acknowledge task.
      waitForUndecidedReviewers: Whether the workflow process should wait for
                        undecided reviewers.

      Sub-elements:

      ResourceListItem: An entry in the ResourceList.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="ResourceListItem" type="plm:ResourceListItemType"/>
        </xsd:choice>
        <xsd:attribute name="reviewQuorum" type="xsd:integer" use="optional"/>
        <xsd:attribute name="acknowledgeQuorum" type="xsd:integer" use="optional"/>
        <xsd:attribute name="waitForUndecidedReviewers" type="plm:WorkflowTemplateUndecidedReviewersEnum" default="false"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ResourceList" type="plm:ResourceListType" substitutionGroup="plm:AttribOwner"/>
  <!-- -->
  <!-- Incremental Change -->
  <!-- -->
  <xsd:complexType name="ChangeRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      A revision of a ChangeOrder.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ChangeRevision" type="plm:ChangeRevisionType" substitutionGroup="plm:StructureRevision" />
  <!-- -->
  <xsd:simpleType name="IncChangeEnum">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="add" />
      <xsd:enumeration value="delete" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="IncChangeType">
    <xsd:annotation>
      <xsd:documentation>
      An incremental change to an element.

      Attributes:

      type:             The type or operation of the incremental change.
      engChangeRef:     References the ChangeRevision that represents the
                        engineering change.
      affectedRef:      References the affected element.

      Sub-elements:

      UserData:         Inherited from AttribOwner. If type is modify, UserData
                        elements detail the changes to the properties.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:attribute name="type" type="plm:IncChangeEnum" use="required" />
        <xsd:attribute name="engChangeRef" type="plm:anyURIType" use="optional" plm:refType="plm:ChangeRevision" />
        <xsd:attribute name="affectedRef" type="plm:anyURIType" use="optional" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="IncChange" type="plm:IncChangeType" substitutionGroup="plm:AttribOwner" />
  <!-- -->
  <!-- ************************ DiagramTemplate **************************** -->
  <!-- -->
  <xsd:simpleType name="DiagramToolEnum">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="visio" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="DiagramTemplateType">
    <xsd:annotation>
      <xsd:documentation>
      Template for a Diagram.

      Attributes:

      tool:             The tool used to create the DiagramTemplate.
      appDomain:        The application domain of the DiagramTemplate such as
                        functional, logical or electrical.
      hidePorts:        Whether to hide the ports on the associated Diagram.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase">
        <xsd:attribute name="tool" type="plm:DiagramToolEnum" default="visio" />
        <xsd:attribute name="appDomain" type="xsd:string" use="required" />
        <xsd:attribute name="hidePorts" type="xsd:boolean" default="false" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DiagramTemplate" type="plm:DiagramTemplateType" substitutionGroup="plm:Structure" />
  <!-- -->
  <!-- ************************ DiagramTemplateRevision ******************** -->
  <!-- -->
  <xsd:complexType name="DiagramTemplateRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Revision of a DiagramTemplate.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:attribute name="membershipRuleRef" type="plm:anyURIType" use="required" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DiagramTemplateRevision" type="plm:DiagramTemplateRevisionType" substitutionGroup="plm:StructureRevision" />
  <!-- -->
  <!-- ************************ Diagram ************************************ -->
  <!-- -->
  <xsd:complexType name="DiagramType">
    <xsd:annotation>
      <xsd:documentation>
      Graphical representation of a product structure.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Diagram" type="plm:DiagramType" substitutionGroup="plm:Structure" />
  <!-- -->
  <!-- ************************ DiagramRevision **************************** -->
  <!-- -->
  <xsd:complexType name="DiagramRevisionType">
    <xsd:annotation>
      <xsd:documentation>
      Revision of a Diagram.

      Sub-elements:

      Representation:   Representation of the DiagramRevision.

      Attributes:

      representationRefs: Used in preference to Representation sub-elements.
      diagramTemplateRevisionRef: References the DiagramTemplateRevision.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:StructureRevisionBase">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="plm:Representation"/>
        </xsd:choice>
        <xsd:attribute name="representationRefs" type="plm:uriReferenceListType" use="optional" plm:refType="plm:Representation" />
        <xsd:attribute name="diagramTemplateRevisionRef" type="plm:anyURIType" use="required" plm:refType="plm:DiagramTemplateRevision" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DiagramRevision" type="plm:DiagramRevisionType" substitutionGroup="plm:StructureRevision" />
  <!-- -->
  <!-- ************************ ShapeRelation ****************************** -->
  <!-- -->
  <xsd:simpleType name="ShapeMembershipEnum">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="rule" />
      <xsd:enumeration value="userAdded" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
  <xsd:complexType name="ShapeRelationType">
    <xsd:annotation>
      <xsd:documentation>
      Relates a Diagram shape to a product structure element.

      Attributes:

      shapeGraphics:    The tool specific string to render the shape.
      membershipType:   The membership type which brought the shape onto the
                        Diagram.
      userOmitted:      Whether the shape is deliberately omitted from the
                        Diagram by the user. 
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:GeneralRelationType">
        <xsd:attribute name="shapeGraphics"  type="xsd:string" use="required" />
        <xsd:attribute name="membershipType" type="plm:ShapeMembershipEnum" default="rule" />
        <xsd:attribute name="userOmitted" type="xsd:boolean" default="false" />		
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ShapeRelation" type="plm:ShapeRelationType" substitutionGroup="plm:GeneralRelation" />
  <!-- -->
  <!-- ************************ DiagramRule ******************************** -->
  <!-- -->
  <xsd:complexType name="DiagramRuleType">
    <xsd:annotation>
      <xsd:documentation>
      A list of Relation names for a DiagramTemplate.

      Sub-elements:

      DiagramRelations: The individual Relation names.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:AttribOwnerBase">
        <xsd:choice minOccurs="0">
          <xsd:element name="DiagramRelations" type="plm:UserListDataType" />
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DiagramRule" type="plm:DiagramRuleType" substitutionGroup="plm:AttribOwner" />
  <!-- -->
  <!-- 4GD -->
  <!-- -->
  <xsd:complexType name="AttributeGroupType">
    <xsd:annotation>
      <xsd:documentation>
      A 4GD Attribute Group.

      Attributes:

      subType:          Inherited from Form. The value, "managed", indicates the
                        Attribute Group is managed. Otherwise, it is unmanaged.
      revision:         The revision of the Attribute Group.
      applicationModelRef: References the Application Model. For product
                        structure, this is a Collaborative Design.
      elementThreadRef: References the InstanceThread to which this Attribute
                        Group attaches.
      elementThread:    The identifier of the element thread of the Attribute
                        Group.

      Sub-elements:

      Parameter:        The name/value pairs of the attributes.
      VariantCondition: Switches the Attribute Group on.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:FormType">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element name="Parameter" type="plm:UserDataElementType" />
          <xsd:element ref="plm:VariantCondition" />
        </xsd:choice>
        <xsd:attribute name="revision" type="xsd:string" use="optional" />
        <xsd:attribute name="applicationModelRef" type="plm:anyURIType" use="optional" plm:refType="plm:StructureRevisionView" />
        <xsd:attribute name="elementThreadRef" type="plm:anyURIType" use="optional" plm:refType="plm:InstanceThread" />
        <xsd:attribute name="elementThread" type="xsd:string" use="optional" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AttributeGroup" type="plm:AttributeGroupType" substitutionGroup="plm:Form" />
  <!-- -->
  <!-- ************************ Palette ************************************ -->
  <!-- -->
  <xsd:complexType name="PaletteType">
    <xsd:annotation>
      <xsd:documentation>
      A set of Model View Lists for a Disclosure.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="plm:FolderType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Palette" type="plm:PaletteType" substitutionGroup="plm:Folder" />
</xsd:schema>
